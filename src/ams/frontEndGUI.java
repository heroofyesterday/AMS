/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ams;

import ams.other.Database;
import ams.other.SQL;
import ams.other.Utilities;
import com.mysql.jdbc.SQLError;
import java.awt.CardLayout;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author kieranross
 */
public class frontEndGUI extends javax.swing.JFrame {
    private String host = "localhost";
    private String database = "AMPDatabase";
    //private String username = "kieranross";
    //private String password = "kpr030590";
    
    private String username = JOptionPane.showInputDialog(rootPane, "Please Enter Username", "Asset Management System", WIDTH);
    private String password = JOptionPane.showInputDialog(rootPane, "Please Enter Password", "Asset Management System", WIDTH);
    Connection connection = SQL.connect(host, database, username, password);

    /**
     * Creates new form frontEndGUI
     */
    public frontEndGUI() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        GUI = new javax.swing.JPanel();
        centerPanel = new javax.swing.JPanel();
        viewAssetsPanel = new javax.swing.JPanel();
        centerpanelAssets1 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        assetsPane = new javax.swing.JScrollPane();
        assetsTable = Database.getTableView(connection, "Select * FROM Assets");
        bottomPanel1 = new javax.swing.JPanel();
        viewAssetButton = new javax.swing.JButton();
        copyAssetButton = new javax.swing.JButton();
        deleteAssetButton = new javax.swing.JButton();
        topPanelAssets1 = new javax.swing.JPanel();
        searchField = new javax.swing.JTextField();
        searchAssets = new javax.swing.JButton();
        viewUsersPanel = new javax.swing.JPanel();
        centerpanelUsers = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        usersPane = new javax.swing.JScrollPane();
        usersTable = Database.getTableView(connection, "Select * FROM Users");
        bottomPanel2 = new javax.swing.JPanel();
        viewUserButton = new javax.swing.JButton();
        deleteUserButton = new javax.swing.JButton();
        topPanelUsers = new javax.swing.JPanel();
        searchField1 = new javax.swing.JTextField();
        searchUsers = new javax.swing.JButton();
        viewInvoicesPanel = new javax.swing.JPanel();
        centerpanelInvoices = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        invoicePane = new javax.swing.JScrollPane();
        invoiceTable = Database.getTableView(connection, "SELECT Invoices.InvoiceNo, Invoices.Date, Invoices.InvoiceAddress, COUNT(Assets.InvoiceNo) AS NumberOfItems, Invoices.Total FROM Invoices LEFT OUTER JOIN Assets On Invoices.InvoiceNo = Assets.InvoiceNo GROUP BY Invoices.InvoiceNo");
        bottomPanel3 = new javax.swing.JPanel();
        viewInvoiceButton = new javax.swing.JButton();
        deleteInvoiceButton = new javax.swing.JButton();
        topPanelInvoices = new javax.swing.JPanel();
        searchField2 = new javax.swing.JTextField();
        searchInvoices = new javax.swing.JButton();
        viewSettingsPanel = new javax.swing.JPanel();
        View = new javax.swing.JPanel();
        viewUserPanel = new javax.swing.JPanel();
        usersPane1 = new javax.swing.JScrollPane();
        usersTable1 = Database.getTableView(connection, "select DISTINCT mysql.db.`User`, mysql.db.Select_priv, mysql.db.Insert_priv, mysql.db.Update_priv, mysql.db.Delete_priv, mysql.db.Create_priv from mysql.db where mysql.db.Db='ampdatabase'");
        addUserPanel = new javax.swing.JPanel();
        labelUsername = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        labelType = new javax.swing.JLabel();
        userTypeComboBox = new javax.swing.JComboBox();
        labelPassword = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        createUserButton = new javax.swing.JButton();
        editUserPanel = new javax.swing.JPanel();
        labelUsername1 = new javax.swing.JLabel();
        usernameTextField1 = new javax.swing.JTextField();
        labelType1 = new javax.swing.JLabel();
        userTypeComboBox1 = new javax.swing.JComboBox();
        labelPassword1 = new javax.swing.JLabel();
        passwordField1 = new javax.swing.JPasswordField();
        editUserButton1 = new javax.swing.JButton();
        SettingButtons = new javax.swing.JPanel();
        addUser = new javax.swing.JButton();
        editUser = new javax.swing.JButton();
        deleteUser = new javax.swing.JButton();
        viewButton = new javax.swing.JButton();
        addAssetsPanel = new javax.swing.JPanel();
        centerpanelAssets = new javax.swing.JPanel();
        assetNumberLabel = new javax.swing.JLabel();
        assetNumberTextField = new javax.swing.JTextField();
        titleLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        statusLabel = new javax.swing.JLabel();
        statusComboBox = new javax.swing.JComboBox();
        locationLabel = new javax.swing.JLabel();
        locationTextField = new javax.swing.JTextField();
        serialNumberLabel = new javax.swing.JLabel();
        serialNumberTextField = new javax.swing.JTextField();
        typeLabel = new javax.swing.JLabel();
        typeTextField = new javax.swing.JTextField();
        manufacturerLabel = new javax.swing.JLabel();
        manufacturerTextField = new javax.swing.JTextField();
        modelLabel = new javax.swing.JLabel();
        modelTextField = new javax.swing.JTextField();
        categoryLabel = new javax.swing.JLabel();
        categoryComboBox = new javax.swing.JComboBox();
        disposalDateLabel = new javax.swing.JLabel();
        disposalDateTextField = new javax.swing.JFormattedTextField();
        purchaseDateLabel = new javax.swing.JLabel();
        purchaseDateTextField = new javax.swing.JFormattedTextField();
        invoiceNumber = new javax.swing.JLabel();
        invoiceNumberComboBox = new javax.swing.JComboBox();
        unitCostLabel = new javax.swing.JLabel();
        unitCostTextField = new javax.swing.JTextField();
        notesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        notesTextField = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        assignedUserComboBox = new javax.swing.JComboBox();
        addAssetButton = new javax.swing.JButton();
        topPanelAssets = new javax.swing.JPanel();
        AssetNumberLabel1 = new javax.swing.JLabel();
        AssetNumber1 = new javax.swing.JLabel();
        addUsersPanel = new javax.swing.JPanel();
        topPanelUsers2 = new javax.swing.JPanel();
        UserIDNumberLabel1 = new javax.swing.JLabel();
        UserIDNumber1 = new javax.swing.JLabel();
        centerpanelAssets2 = new javax.swing.JPanel();
        IDNumberLabel = new javax.swing.JLabel();
        idNumberTextField = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        LastNameTextField = new javax.swing.JTextField();
        jobTitleLabel = new javax.swing.JLabel();
        jobTitleTextField = new javax.swing.JTextField();
        companyLabel = new javax.swing.JLabel();
        companyTextField = new javax.swing.JTextField();
        emailAddressLabel = new javax.swing.JLabel();
        emailAddressTextField = new javax.swing.JTextField();
        telephoneNumberLabel = new javax.swing.JLabel();
        telephoneNumberTextField = new javax.swing.JTextField();
        mobileNumberLabel = new javax.swing.JLabel();
        mobileNumberTextField = new javax.swing.JTextField();
        addUserButton = new javax.swing.JButton();
        addInvoicesPanel = new javax.swing.JPanel();
        topPanelUsers3 = new javax.swing.JPanel();
        centerpanelAssets3 = new javax.swing.JPanel();
        InvoiceNumberLabel2 = new javax.swing.JLabel();
        invoiceNumberTextField = new javax.swing.JTextField();
        InvoiceDateLabel = new javax.swing.JLabel();
        InvoiceDateTextField = new javax.swing.JFormattedTextField();
        InvoiceAddressLabel = new javax.swing.JLabel();
        InvoiceAddressTextField = new javax.swing.JTextField();
        TotalLabel = new javax.swing.JLabel();
        InvoiceTotalTextField = new javax.swing.JTextField();
        addInvoiceButton = new javax.swing.JButton();
        viewSelectedAssetsPanel = new javax.swing.JPanel();
        centerpanelAssets5 = new javax.swing.JPanel();
        assetNumberLabel1 = new javax.swing.JLabel();
        assetNumberTextField1 = new javax.swing.JTextField();
        titleLabel1 = new javax.swing.JLabel();
        titleTextField1 = new javax.swing.JTextField();
        statusLabel1 = new javax.swing.JLabel();
        statusComboBox1 = new javax.swing.JComboBox();
        locationLabel1 = new javax.swing.JLabel();
        locationTextField1 = new javax.swing.JTextField();
        serialNumberLabel1 = new javax.swing.JLabel();
        serialNumberTextField1 = new javax.swing.JTextField();
        typeLabel1 = new javax.swing.JLabel();
        typeTextField1 = new javax.swing.JTextField();
        manufacturerLabel1 = new javax.swing.JLabel();
        manufacturerTextField1 = new javax.swing.JTextField();
        modelLabel1 = new javax.swing.JLabel();
        modelTextField1 = new javax.swing.JTextField();
        categoryLabel1 = new javax.swing.JLabel();
        categoryComboBox1 = new javax.swing.JComboBox();
        disposalDateLabel1 = new javax.swing.JLabel();
        disposalDateTextField1 = new javax.swing.JFormattedTextField();
        purchaseDateLabel1 = new javax.swing.JLabel();
        purchaseDateTextField1 = new javax.swing.JFormattedTextField();
        invoiceNumber1 = new javax.swing.JLabel();
        invoiceNumberComboBox1 = new javax.swing.JComboBox();
        unitCostLabel1 = new javax.swing.JLabel();
        unitCostTextField1 = new javax.swing.JTextField();
        notesLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        notesTextField1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        assignedUserComboBox1 = new javax.swing.JComboBox();
        updateAssetButton = new javax.swing.JButton();
        topPanelAssets3 = new javax.swing.JPanel();
        AssetNumberLabel3 = new javax.swing.JLabel();
        AssetNumber3 = new javax.swing.JLabel();
        viewSelectedInvoicesPanel = new javax.swing.JPanel();
        topPanelUsers4 = new javax.swing.JPanel();
        centerpanelAssets4 = new javax.swing.JPanel();
        InvoiceNumberLabel3 = new javax.swing.JLabel();
        invoiceNumberTextField1 = new javax.swing.JTextField();
        InvoiceDateLabel1 = new javax.swing.JLabel();
        InvoiceDateTextField1 = new javax.swing.JFormattedTextField();
        InvoiceAddressLabel1 = new javax.swing.JLabel();
        InvoiceAddressTextField1 = new javax.swing.JTextField();
        TotalLabel1 = new javax.swing.JLabel();
        InvoiceTotalTextField1 = new javax.swing.JTextField();
        updateInvoiceButton1 = new javax.swing.JButton();
        viewSelectedUsersPanel = new javax.swing.JPanel();
        topPanelUsers5 = new javax.swing.JPanel();
        UserIDNumberLabel2 = new javax.swing.JLabel();
        UserIDNumber2 = new javax.swing.JLabel();
        centerpanelAssets6 = new javax.swing.JPanel();
        IDNumberLabel1 = new javax.swing.JLabel();
        idNumberTextField1 = new javax.swing.JTextField();
        firstNameLabel1 = new javax.swing.JLabel();
        firstNameTextField1 = new javax.swing.JTextField();
        lastNameLabel1 = new javax.swing.JLabel();
        LastNameTextField1 = new javax.swing.JTextField();
        jobTitleLabel1 = new javax.swing.JLabel();
        jobTitleTextField1 = new javax.swing.JTextField();
        companyLabel1 = new javax.swing.JLabel();
        companyTextField1 = new javax.swing.JTextField();
        emailAddressLabel1 = new javax.swing.JLabel();
        emailAddressTextField1 = new javax.swing.JTextField();
        telephoneNumberLabel1 = new javax.swing.JLabel();
        telephoneNumberTextField1 = new javax.swing.JTextField();
        mobileNumberLabel1 = new javax.swing.JLabel();
        mobileNumberTextField1 = new javax.swing.JTextField();
        viewAssetsForButton = new javax.swing.JButton();
        updateUserButton1 = new javax.swing.JButton();
        viewAssignsPanel = new javax.swing.JPanel();
        centerpanelassigns = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        assignsPane = new javax.swing.JScrollPane();
        assignsTable = Database.getTableView(connection, "Select CONCAT(AssetOwners.IDnumber,': ', Users.firstName,' ', Users.lastName) as 'assetOwner', AssetOwners.assetNumber, Assets.model, Assets.location, Assets.`status`\n" +
            "FROM AssetOwners \n" +
            "INNER join Users on AssetOwners.IDnumber = Users.IDnumber\n" +
            "inner join Assets on Assets.assetNumber = AssetOwners.assetNumber;");
        bottomPanel4 = new javax.swing.JPanel();
        deleteassignButton = new javax.swing.JButton();
        topPanelassigns = new javax.swing.JPanel();
        searchField3 = new javax.swing.JTextField();
        searchAssigns = new javax.swing.JButton();
        viewReports = new javax.swing.JPanel();
        centerpanelassigns1 = new javax.swing.JPanel();
        reportsPanel = new javax.swing.JPanel();
        report1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        numberOfAssets = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        numberOfAssignees = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        numberOfInvoices = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        totalOfInvoices = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        costOfAssets = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        assetWithNoOwners = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        locationComboBox = new javax.swing.JComboBox();
        assetsFromLocation = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        purchasedInLastYear = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        usersWithNoAssets = new javax.swing.JButton();
        reportsRunPanel = new javax.swing.JPanel();
        resultsPane = new javax.swing.JScrollPane();
        resultsTable = Database.getTableView(connection, "select DISTINCT mysql.db.`User`, mysql.db.Select_priv, mysql.db.Insert_priv, mysql.db.Update_priv, mysql.db.Delete_priv, mysql.db.Create_priv from mysql.db where mysql.db.Db='ampdatabase'");
        topPanelassigns1 = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        viewAssetsButton = new javax.swing.JButton();
        viewUsersButton = new javax.swing.JButton();
        viewInvoicesButton = new javax.swing.JButton();
        viewAssignsButton = new javax.swing.JButton();
        Reports = new javax.swing.JButton();
        viewSettingsButton = new javax.swing.JButton();
        topPanel = new javax.swing.JPanel();
        appHeading = new javax.swing.JLabel();
        rightPanel = new javax.swing.JPanel();
        addAssetsButton = new javax.swing.JButton();
        addUsersButton = new javax.swing.JButton();
        addInvoicesButton = new javax.swing.JButton();
        bottomPanel = new javax.swing.JPanel();
        UserLabel = new javax.swing.JLabel();
        Username = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 600));

        GUI.setBackground(new java.awt.Color(255, 255, 255));
        GUI.setMinimumSize(new java.awt.Dimension(300, 300));
        GUI.setPreferredSize(new java.awt.Dimension(600, 600));
        GUI.setLayout(new java.awt.BorderLayout());

        centerPanel.setBackground(new java.awt.Color(255, 255, 255));
        centerPanel.setOpaque(false);
        centerPanel.setPreferredSize(new java.awt.Dimension(500, 500));
        centerPanel.setLayout(new java.awt.CardLayout());

        viewAssetsPanel.setBackground(new java.awt.Color(255, 255, 255));
        viewAssetsPanel.setOpaque(false);
        viewAssetsPanel.setPreferredSize(new java.awt.Dimension(500, 685));
        viewAssetsPanel.setLayout(new java.awt.BorderLayout());

        centerpanelAssets1.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelAssets1.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelAssets1.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        assetsPane.setViewportView(assetsTable);

        jPanel1.add(assetsPane);

        centerpanelAssets1.add(jPanel1, java.awt.BorderLayout.CENTER);

        bottomPanel1.setLayout(new java.awt.GridLayout(1, 0));

        viewAssetButton.setText("View Asset");
        viewAssetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAssetButtonActionPerformed(evt);
            }
        });
        bottomPanel1.add(viewAssetButton);

        copyAssetButton.setText("Copy Asset");
        copyAssetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyAssetButtonActionPerformed(evt);
            }
        });
        bottomPanel1.add(copyAssetButton);

        deleteAssetButton.setText("Delete Asset");
        deleteAssetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAssetButtonActionPerformed(evt);
            }
        });
        bottomPanel1.add(deleteAssetButton);

        centerpanelAssets1.add(bottomPanel1, java.awt.BorderLayout.SOUTH);

        viewAssetsPanel.add(centerpanelAssets1, java.awt.BorderLayout.CENTER);

        topPanelAssets1.setLayout(new java.awt.GridLayout());

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });
        topPanelAssets1.add(searchField);

        searchAssets.setText("Search");
        searchAssets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAssetsActionPerformed(evt);
            }
        });
        topPanelAssets1.add(searchAssets);

        viewAssetsPanel.add(topPanelAssets1, java.awt.BorderLayout.NORTH);

        centerPanel.add(viewAssetsPanel, "viewAssets");

        viewUsersPanel.setOpaque(false);
        viewUsersPanel.setPreferredSize(new java.awt.Dimension(500, 685));
        viewUsersPanel.setLayout(new java.awt.BorderLayout());

        centerpanelUsers.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelUsers.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelUsers.setLayout(new java.awt.BorderLayout());

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        usersTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        usersPane.setViewportView(usersTable);

        jPanel2.add(usersPane);

        centerpanelUsers.add(jPanel2, java.awt.BorderLayout.CENTER);

        bottomPanel2.setLayout(new java.awt.GridLayout(1, 0));

        viewUserButton.setText("View Assignee");
        viewUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewUserButtonActionPerformed(evt);
            }
        });
        bottomPanel2.add(viewUserButton);

        deleteUserButton.setText("Delete Assignee");
        deleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserButtonActionPerformed(evt);
            }
        });
        bottomPanel2.add(deleteUserButton);

        centerpanelUsers.add(bottomPanel2, java.awt.BorderLayout.SOUTH);

        viewUsersPanel.add(centerpanelUsers, java.awt.BorderLayout.CENTER);

        topPanelUsers.setLayout(new java.awt.GridLayout());

        searchField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchField1ActionPerformed(evt);
            }
        });
        topPanelUsers.add(searchField1);

        searchUsers.setText("Search");
        searchUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUsersActionPerformed(evt);
            }
        });
        topPanelUsers.add(searchUsers);

        viewUsersPanel.add(topPanelUsers, java.awt.BorderLayout.NORTH);

        centerPanel.add(viewUsersPanel, "viewUsers");

        viewInvoicesPanel.setOpaque(false);
        viewInvoicesPanel.setPreferredSize(new java.awt.Dimension(500, 685));
        viewInvoicesPanel.setLayout(new java.awt.BorderLayout());

        centerpanelInvoices.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelInvoices.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelInvoices.setLayout(new java.awt.BorderLayout());

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        invoicePane.setViewportView(invoiceTable);

        jPanel3.add(invoicePane);

        centerpanelInvoices.add(jPanel3, java.awt.BorderLayout.CENTER);

        bottomPanel3.setLayout(new java.awt.GridLayout(1, 0));

        viewInvoiceButton.setText("View Invoice");
        viewInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInvoiceButtonActionPerformed(evt);
            }
        });
        bottomPanel3.add(viewInvoiceButton);

        deleteInvoiceButton.setText("Delete Invoice");
        deleteInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteInvoiceButtonActionPerformed(evt);
            }
        });
        bottomPanel3.add(deleteInvoiceButton);

        centerpanelInvoices.add(bottomPanel3, java.awt.BorderLayout.SOUTH);

        viewInvoicesPanel.add(centerpanelInvoices, java.awt.BorderLayout.CENTER);

        topPanelInvoices.setLayout(new java.awt.GridLayout());

        searchField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchField2ActionPerformed(evt);
            }
        });
        topPanelInvoices.add(searchField2);

        searchInvoices.setText("Search");
        searchInvoices.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchInvoicesActionPerformed(evt);
            }
        });
        topPanelInvoices.add(searchInvoices);

        viewInvoicesPanel.add(topPanelInvoices, java.awt.BorderLayout.NORTH);

        centerPanel.add(viewInvoicesPanel, "viewInvoices");

        viewSettingsPanel.setOpaque(false);
        viewSettingsPanel.setPreferredSize(new java.awt.Dimension(500, 685));
        viewSettingsPanel.setLayout(new java.awt.BorderLayout());

        View.setLayout(new java.awt.CardLayout());

        viewUserPanel.setLayout(new java.awt.GridLayout(1, 1));

        usersTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        usersPane1.setViewportView(usersTable1);

        viewUserPanel.add(usersPane1);

        View.add(viewUserPanel, "viewUser");

        addUserPanel.setLayout(new java.awt.GridLayout(10, 2));

        labelUsername.setText("Username");
        addUserPanel.add(labelUsername);
        addUserPanel.add(usernameTextField);

        labelType.setText("Type of User");
        addUserPanel.add(labelType);

        userTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Observe", "Regular", "Administrator", "Superuser" }));
        addUserPanel.add(userTypeComboBox);

        labelPassword.setText("Password");
        addUserPanel.add(labelPassword);
        addUserPanel.add(passwordField);

        createUserButton.setText("Add");
        createUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createUserButtonActionPerformed(evt);
            }
        });
        addUserPanel.add(createUserButton);

        View.add(addUserPanel, "addUser");

        editUserPanel.setLayout(new java.awt.GridLayout(10, 2));

        labelUsername1.setText("Username");
        editUserPanel.add(labelUsername1);
        editUserPanel.add(usernameTextField1);

        labelType1.setText("Type of User");
        editUserPanel.add(labelType1);

        userTypeComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Observe", "Regular", "Administrator", "Superuser" }));
        editUserPanel.add(userTypeComboBox1);

        labelPassword1.setText("Password");
        editUserPanel.add(labelPassword1);
        editUserPanel.add(passwordField1);

        editUserButton1.setText("Edit");
        editUserButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserButton1ActionPerformed(evt);
            }
        });
        editUserPanel.add(editUserButton1);

        View.add(editUserPanel, "editUser");

        viewSettingsPanel.add(View, java.awt.BorderLayout.CENTER);

        SettingButtons.setLayout(new java.awt.GridLayout(1, 0));

        addUser.setText("Add User");
        addUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserActionPerformed(evt);
            }
        });
        SettingButtons.add(addUser);

        editUser.setText("Edit User");
        editUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editUserActionPerformed(evt);
            }
        });
        SettingButtons.add(editUser);

        deleteUser.setText("Delete User");
        deleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserActionPerformed(evt);
            }
        });
        SettingButtons.add(deleteUser);

        viewButton.setText("View Users");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });
        SettingButtons.add(viewButton);

        viewSettingsPanel.add(SettingButtons, java.awt.BorderLayout.NORTH);

        centerPanel.add(viewSettingsPanel, "settings");

        addAssetsPanel.setOpaque(false);
        addAssetsPanel.setPreferredSize(new java.awt.Dimension(400, 400));
        addAssetsPanel.setSize(new java.awt.Dimension(500, 500));
        addAssetsPanel.setLayout(new java.awt.BorderLayout());

        centerpanelAssets.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelAssets.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelAssets.setLayout(new java.awt.GridLayout(16, 2));

        assetNumberLabel.setText("Asset Number");
        centerpanelAssets.add(assetNumberLabel);

        assetNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetNumberTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(assetNumberTextField);

        titleLabel.setText("Title");
        centerpanelAssets.add(titleLabel);

        titleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(titleTextField);

        statusLabel.setText("Status");
        centerpanelAssets.add(statusLabel);

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Operational", "Sold", "Recycled", "Repaired" }));
        centerpanelAssets.add(statusComboBox);

        locationLabel.setText("Location");
        centerpanelAssets.add(locationLabel);

        locationTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(locationTextField);

        serialNumberLabel.setText("Serial Number");
        centerpanelAssets.add(serialNumberLabel);

        serialNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialNumberTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(serialNumberTextField);

        typeLabel.setText("Type");
        centerpanelAssets.add(typeLabel);

        typeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(typeTextField);

        manufacturerLabel.setText("Manufacturer");
        centerpanelAssets.add(manufacturerLabel);

        manufacturerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manufacturerTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(manufacturerTextField);

        modelLabel.setText("Model");
        centerpanelAssets.add(modelLabel);

        modelTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(modelTextField);

        categoryLabel.setText("Category");
        centerpanelAssets.add(categoryLabel);

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hardware", "Software" }));
        centerpanelAssets.add(categoryComboBox);

        disposalDateLabel.setText("Disposal Date");
        centerpanelAssets.add(disposalDateLabel);

        disposalDateTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yy/M/d"))));
        disposalDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disposalDateTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(disposalDateTextField);

        purchaseDateLabel.setText("Purchase Date");
        centerpanelAssets.add(purchaseDateLabel);

        purchaseDateTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yy/M/d"))));
        purchaseDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseDateTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(purchaseDateTextField);

        invoiceNumber.setText("Invoice Number");
        centerpanelAssets.add(invoiceNumber);

        invoiceNumberComboBox.setModel(Database.getComboBoxList(connection, "Select InvoiceNo From Invoices"));
        invoiceNumberComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceNumberComboBoxActionPerformed(evt);
            }
        });
        centerpanelAssets.add(invoiceNumberComboBox);

        unitCostLabel.setText("Unit Cost");
        centerpanelAssets.add(unitCostLabel);

        unitCostTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitCostTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets.add(unitCostTextField);

        notesLabel.setText("Notes");
        centerpanelAssets.add(notesLabel);

        notesTextField.setColumns(20);
        notesTextField.setRows(5);
        jScrollPane1.setViewportView(notesTextField);

        centerpanelAssets.add(jScrollPane1);

        jLabel1.setText("Assigned User");
        centerpanelAssets.add(jLabel1);

        assignedUserComboBox.setModel(Database.getComboBoxList(connection, "select CONCAT(IDnumber,': ',firstName,' ',lastName) from Users"));
        centerpanelAssets.add(assignedUserComboBox);

        addAssetsPanel.add(centerpanelAssets, java.awt.BorderLayout.CENTER);

        addAssetButton.setText("Add Asset");
        addAssetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAssetButtonActionPerformed(evt);
            }
        });
        addAssetsPanel.add(addAssetButton, java.awt.BorderLayout.PAGE_END);

        topPanelAssets.setPreferredSize(new java.awt.Dimension(100, 100));
        topPanelAssets.setLayout(new java.awt.GridLayout());

        AssetNumberLabel1.setText("Last Asset Number Used");
        topPanelAssets.add(AssetNumberLabel1);

        AssetNumber1.setText(Database.getLastAssetNumberUsed(connection));
        topPanelAssets.add(AssetNumber1);

        addAssetsPanel.add(topPanelAssets, java.awt.BorderLayout.NORTH);

        centerPanel.add(addAssetsPanel, "addAssets");

        addUsersPanel.setOpaque(false);
        addUsersPanel.setLayout(new java.awt.BorderLayout());

        topPanelUsers2.setPreferredSize(new java.awt.Dimension(100, 100));
        topPanelUsers2.setLayout(new java.awt.GridLayout());

        UserIDNumberLabel1.setText("Last ID Number Used");
        topPanelUsers2.add(UserIDNumberLabel1);

        UserIDNumber1.setText(Database.getLastUserIDNumberUsed(connection));
        topPanelUsers2.add(UserIDNumber1);

        addUsersPanel.add(topPanelUsers2, java.awt.BorderLayout.NORTH);

        centerpanelAssets2.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelAssets2.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelAssets2.setLayout(new java.awt.GridLayout(12, 2));

        IDNumberLabel.setText("ID Number");
        centerpanelAssets2.add(IDNumberLabel);

        idNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idNumberTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(idNumberTextField);

        firstNameLabel.setText("First Name");
        centerpanelAssets2.add(firstNameLabel);

        firstNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(firstNameTextField);

        lastNameLabel.setText("Last Name");
        centerpanelAssets2.add(lastNameLabel);

        LastNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastNameTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(LastNameTextField);

        jobTitleLabel.setText("Job Title");
        centerpanelAssets2.add(jobTitleLabel);

        jobTitleTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobTitleTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(jobTitleTextField);

        companyLabel.setText("Company");
        centerpanelAssets2.add(companyLabel);

        companyTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(companyTextField);

        emailAddressLabel.setText("Email Address");
        centerpanelAssets2.add(emailAddressLabel);

        emailAddressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAddressTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(emailAddressTextField);

        telephoneNumberLabel.setText("Telephone Number");
        centerpanelAssets2.add(telephoneNumberLabel);

        telephoneNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telephoneNumberTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(telephoneNumberTextField);

        mobileNumberLabel.setText("Mobile Number");
        centerpanelAssets2.add(mobileNumberLabel);

        mobileNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNumberTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets2.add(mobileNumberTextField);

        addUsersPanel.add(centerpanelAssets2, java.awt.BorderLayout.CENTER);

        addUserButton.setText("Add Assignee");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });
        addUsersPanel.add(addUserButton, java.awt.BorderLayout.PAGE_END);

        centerPanel.add(addUsersPanel, "addUsers");

        addInvoicesPanel.setOpaque(false);
        addInvoicesPanel.setLayout(new java.awt.BorderLayout());

        topPanelUsers3.setPreferredSize(new java.awt.Dimension(100, 100));
        topPanelUsers3.setLayout(new java.awt.GridLayout());
        addInvoicesPanel.add(topPanelUsers3, java.awt.BorderLayout.NORTH);

        centerpanelAssets3.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelAssets3.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelAssets3.setLayout(new java.awt.GridLayout(7, 2));

        InvoiceNumberLabel2.setText("Invoice Number");
        centerpanelAssets3.add(InvoiceNumberLabel2);

        invoiceNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceNumberTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets3.add(invoiceNumberTextField);

        InvoiceDateLabel.setText("Invoice Date");
        centerpanelAssets3.add(InvoiceDateLabel);

        InvoiceDateTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yy/M/d"))));
        InvoiceDateTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceDateTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets3.add(InvoiceDateTextField);

        InvoiceAddressLabel.setText("Invoice Address");
        centerpanelAssets3.add(InvoiceAddressLabel);

        InvoiceAddressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceAddressTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets3.add(InvoiceAddressTextField);

        TotalLabel.setText("Total");
        centerpanelAssets3.add(TotalLabel);

        InvoiceTotalTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceTotalTextFieldActionPerformed(evt);
            }
        });
        centerpanelAssets3.add(InvoiceTotalTextField);

        addInvoicesPanel.add(centerpanelAssets3, java.awt.BorderLayout.CENTER);

        addInvoiceButton.setText("Add Invoice");
        addInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInvoiceButtonActionPerformed(evt);
            }
        });
        addInvoicesPanel.add(addInvoiceButton, java.awt.BorderLayout.PAGE_END);

        centerPanel.add(addInvoicesPanel, "addInvoices");

        viewSelectedAssetsPanel.setOpaque(false);
        viewSelectedAssetsPanel.setPreferredSize(new java.awt.Dimension(400, 400));
        viewSelectedAssetsPanel.setSize(new java.awt.Dimension(500, 500));
        viewSelectedAssetsPanel.setLayout(new java.awt.BorderLayout());

        centerpanelAssets5.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelAssets5.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelAssets5.setLayout(new java.awt.GridLayout(16, 2));

        assetNumberLabel1.setText("Asset Number");
        centerpanelAssets5.add(assetNumberLabel1);

        assetNumberTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetNumberTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(assetNumberTextField1);

        titleLabel1.setText("Title");
        centerpanelAssets5.add(titleLabel1);

        titleTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(titleTextField1);

        statusLabel1.setText("Status");
        centerpanelAssets5.add(statusLabel1);

        statusComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Operational", "Sold", "Recycled", "Repaired" }));
        centerpanelAssets5.add(statusComboBox1);

        locationLabel1.setText("Location");
        centerpanelAssets5.add(locationLabel1);

        locationTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(locationTextField1);

        serialNumberLabel1.setText("Serial Number");
        centerpanelAssets5.add(serialNumberLabel1);

        serialNumberTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serialNumberTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(serialNumberTextField1);

        typeLabel1.setText("Type");
        centerpanelAssets5.add(typeLabel1);

        typeTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(typeTextField1);

        manufacturerLabel1.setText("Manufacturer");
        centerpanelAssets5.add(manufacturerLabel1);

        manufacturerTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manufacturerTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(manufacturerTextField1);

        modelLabel1.setText("Model");
        centerpanelAssets5.add(modelLabel1);

        modelTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modelTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(modelTextField1);

        categoryLabel1.setText("Category");
        centerpanelAssets5.add(categoryLabel1);

        categoryComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Hardware", "Software" }));
        categoryComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryComboBox1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(categoryComboBox1);

        disposalDateLabel1.setText("Disposal Date");
        centerpanelAssets5.add(disposalDateLabel1);

        disposalDateTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yy/M/d"))));
        disposalDateTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disposalDateTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(disposalDateTextField1);

        purchaseDateLabel1.setText("Purchase Date");
        centerpanelAssets5.add(purchaseDateLabel1);

        purchaseDateTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yy/M/d"))));
        purchaseDateTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseDateTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(purchaseDateTextField1);

        invoiceNumber1.setText("Invoice Number");
        centerpanelAssets5.add(invoiceNumber1);

        invoiceNumberComboBox1.setModel(Database.getComboBoxList(connection, "Select InvoiceNo From Invoices"));
        invoiceNumberComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceNumberComboBox1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(invoiceNumberComboBox1);

        unitCostLabel1.setText("Unit Cost");
        centerpanelAssets5.add(unitCostLabel1);

        unitCostTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitCostTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(unitCostTextField1);

        notesLabel1.setText("Notes");
        centerpanelAssets5.add(notesLabel1);

        notesTextField1.setColumns(20);
        notesTextField1.setRows(5);
        jScrollPane2.setViewportView(notesTextField1);

        centerpanelAssets5.add(jScrollPane2);

        jLabel2.setText("Assigned User");
        centerpanelAssets5.add(jLabel2);

        assignedUserComboBox1.setModel(Database.getComboBoxList(connection, "select CONCAT(IDnumber,': ',firstName,' ',lastName) from Users"));
        assignedUserComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignedUserComboBox1ActionPerformed(evt);
            }
        });
        centerpanelAssets5.add(assignedUserComboBox1);

        viewSelectedAssetsPanel.add(centerpanelAssets5, java.awt.BorderLayout.CENTER);

        updateAssetButton.setText("Update Asset");
        updateAssetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAssetButtonActionPerformed(evt);
            }
        });
        viewSelectedAssetsPanel.add(updateAssetButton, java.awt.BorderLayout.PAGE_END);

        topPanelAssets3.setPreferredSize(new java.awt.Dimension(100, 100));
        topPanelAssets3.setLayout(new java.awt.GridLayout());

        AssetNumberLabel3.setText("Last Asset Number Used");
        topPanelAssets3.add(AssetNumberLabel3);

        AssetNumber3.setText(Database.getLastAssetNumberUsed(connection));
        topPanelAssets3.add(AssetNumber3);

        viewSelectedAssetsPanel.add(topPanelAssets3, java.awt.BorderLayout.NORTH);

        centerPanel.add(viewSelectedAssetsPanel, "viewSelectedAssets");

        viewSelectedInvoicesPanel.setOpaque(false);
        viewSelectedInvoicesPanel.setLayout(new java.awt.BorderLayout());

        topPanelUsers4.setPreferredSize(new java.awt.Dimension(100, 100));

        javax.swing.GroupLayout topPanelUsers4Layout = new javax.swing.GroupLayout(topPanelUsers4);
        topPanelUsers4.setLayout(topPanelUsers4Layout);
        topPanelUsers4Layout.setHorizontalGroup(
            topPanelUsers4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 360, Short.MAX_VALUE)
        );
        topPanelUsers4Layout.setVerticalGroup(
            topPanelUsers4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        viewSelectedInvoicesPanel.add(topPanelUsers4, java.awt.BorderLayout.NORTH);

        centerpanelAssets4.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelAssets4.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelAssets4.setLayout(new java.awt.GridLayout(7, 2));

        InvoiceNumberLabel3.setText("Invoice Number");
        centerpanelAssets4.add(InvoiceNumberLabel3);

        invoiceNumberTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoiceNumberTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets4.add(invoiceNumberTextField1);

        InvoiceDateLabel1.setText("Invoice Date");
        centerpanelAssets4.add(InvoiceDateLabel1);

        InvoiceDateTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yy/M/d"))));
        InvoiceDateTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceDateTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets4.add(InvoiceDateTextField1);

        InvoiceAddressLabel1.setText("Invoice Address");
        centerpanelAssets4.add(InvoiceAddressLabel1);

        InvoiceAddressTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceAddressTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets4.add(InvoiceAddressTextField1);

        TotalLabel1.setText("Total");
        centerpanelAssets4.add(TotalLabel1);

        InvoiceTotalTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvoiceTotalTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets4.add(InvoiceTotalTextField1);

        viewSelectedInvoicesPanel.add(centerpanelAssets4, java.awt.BorderLayout.CENTER);

        updateInvoiceButton1.setText("Update Invoice");
        updateInvoiceButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateInvoiceButton1ActionPerformed(evt);
            }
        });
        viewSelectedInvoicesPanel.add(updateInvoiceButton1, java.awt.BorderLayout.PAGE_END);

        centerPanel.add(viewSelectedInvoicesPanel, "viewSelectedInvoice");

        viewSelectedUsersPanel.setOpaque(false);
        viewSelectedUsersPanel.setLayout(new java.awt.BorderLayout());

        topPanelUsers5.setPreferredSize(new java.awt.Dimension(100, 100));
        topPanelUsers5.setLayout(new java.awt.GridLayout());

        UserIDNumberLabel2.setText("Last ID Number Used");
        topPanelUsers5.add(UserIDNumberLabel2);

        UserIDNumber2.setText(Database.getLastUserIDNumberUsed(connection));
        topPanelUsers5.add(UserIDNumber2);

        viewSelectedUsersPanel.add(topPanelUsers5, java.awt.BorderLayout.NORTH);

        centerpanelAssets6.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelAssets6.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelAssets6.setLayout(new java.awt.GridLayout(12, 2));

        IDNumberLabel1.setText("ID Number");
        centerpanelAssets6.add(IDNumberLabel1);

        idNumberTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idNumberTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(idNumberTextField1);

        firstNameLabel1.setText("First Name");
        centerpanelAssets6.add(firstNameLabel1);

        firstNameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstNameTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(firstNameTextField1);

        lastNameLabel1.setText("Last Name");
        centerpanelAssets6.add(lastNameLabel1);

        LastNameTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LastNameTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(LastNameTextField1);

        jobTitleLabel1.setText("Job Title");
        centerpanelAssets6.add(jobTitleLabel1);

        jobTitleTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobTitleTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(jobTitleTextField1);

        companyLabel1.setText("Company");
        centerpanelAssets6.add(companyLabel1);

        companyTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(companyTextField1);

        emailAddressLabel1.setText("Email Address");
        centerpanelAssets6.add(emailAddressLabel1);

        emailAddressTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailAddressTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(emailAddressTextField1);

        telephoneNumberLabel1.setText("Telephone Number");
        centerpanelAssets6.add(telephoneNumberLabel1);

        telephoneNumberTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telephoneNumberTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(telephoneNumberTextField1);

        mobileNumberLabel1.setText("Mobile Number");
        centerpanelAssets6.add(mobileNumberLabel1);

        mobileNumberTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mobileNumberTextField1ActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(mobileNumberTextField1);

        viewAssetsForButton.setText("View Assignees Assets");
        viewAssetsForButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAssetsForButtonActionPerformed(evt);
            }
        });
        centerpanelAssets6.add(viewAssetsForButton);

        viewSelectedUsersPanel.add(centerpanelAssets6, java.awt.BorderLayout.CENTER);

        updateUserButton1.setText("Update Assignee");
        updateUserButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateUserButton1ActionPerformed(evt);
            }
        });
        viewSelectedUsersPanel.add(updateUserButton1, java.awt.BorderLayout.PAGE_END);

        centerPanel.add(viewSelectedUsersPanel, "viewSelectedUser");

        viewAssignsPanel.setOpaque(false);
        viewAssignsPanel.setPreferredSize(new java.awt.Dimension(500, 685));
        viewAssignsPanel.setLayout(new java.awt.BorderLayout());

        centerpanelassigns.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelassigns.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelassigns.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        assignsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        assignsPane.setViewportView(assignsTable);

        jPanel4.add(assignsPane);

        centerpanelassigns.add(jPanel4, java.awt.BorderLayout.CENTER);

        bottomPanel4.setLayout(new java.awt.GridLayout(1, 0));

        deleteassignButton.setText("Delete Assign");
        deleteassignButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteassignButtonActionPerformed(evt);
            }
        });
        bottomPanel4.add(deleteassignButton);

        centerpanelassigns.add(bottomPanel4, java.awt.BorderLayout.SOUTH);

        viewAssignsPanel.add(centerpanelassigns, java.awt.BorderLayout.CENTER);

        topPanelassigns.setLayout(new java.awt.GridLayout());

        searchField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchField3ActionPerformed(evt);
            }
        });
        topPanelassigns.add(searchField3);

        searchAssigns.setText("Search");
        searchAssigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchAssignsActionPerformed(evt);
            }
        });
        topPanelassigns.add(searchAssigns);

        viewAssignsPanel.add(topPanelassigns, java.awt.BorderLayout.NORTH);

        centerPanel.add(viewAssignsPanel, "viewAssigns");

        viewReports.setOpaque(false);
        viewReports.setPreferredSize(new java.awt.Dimension(500, 685));
        viewReports.setLayout(new java.awt.BorderLayout());

        centerpanelassigns1.setMinimumSize(new java.awt.Dimension(200, 600));
        centerpanelassigns1.setPreferredSize(new java.awt.Dimension(300, 600));
        centerpanelassigns1.setLayout(new java.awt.CardLayout());

        reportsPanel.setLayout(new java.awt.CardLayout());

        java.awt.GridBagLayout report1Layout = new java.awt.GridBagLayout();
        report1Layout.columnWidths = new int[] {0, 10, 0, 10, 0};
        report1Layout.rowHeights = new int[] {0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0, 15, 0};
        report1Layout.columnWeights = new double[] {0.0};
        report1Layout.rowWeights = new double[] {0.0};
        report1.setLayout(report1Layout);

        jLabel3.setText("Number Of Assets");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        report1.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        report1.add(numberOfAssets, gridBagConstraints);

        jLabel4.setText("Number Of Assignees");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        report1.add(numberOfAssignees, gridBagConstraints);

        jLabel5.setText("Number Of Invoices");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        report1.add(numberOfInvoices, gridBagConstraints);

        jLabel6.setText("Total Of Invoices");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel6, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 6;
        report1.add(totalOfInvoices, gridBagConstraints);

        jLabel7.setText("Cost of Assets");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel7, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 8;
        report1.add(costOfAssets, gridBagConstraints);

        jLabel8.setText("Assets With No Owners");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel8, gridBagConstraints);

        assetWithNoOwners.setText("Run");
        assetWithNoOwners.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetWithNoOwnersActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 10;
        report1.add(assetWithNoOwners, gridBagConstraints);

        jLabel9.setText("All Assets in Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel9, gridBagConstraints);

        locationComboBox.setModel(Database.getComboBoxList(connection, "SELECT DISTINCT Location From Assets"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        report1.add(locationComboBox, gridBagConstraints);

        assetsFromLocation.setText("Run");
        assetsFromLocation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assetsFromLocationActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 12;
        report1.add(assetsFromLocation, gridBagConstraints);

        jLabel10.setText("Assets Purchased Within the Last Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel10, gridBagConstraints);

        purchasedInLastYear.setText("Run");
        purchasedInLastYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchasedInLastYearActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 14;
        report1.add(purchasedInLastYear, gridBagConstraints);

        jLabel11.setText("Users With No Assets");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        report1.add(jLabel11, gridBagConstraints);

        usersWithNoAssets.setText("Run");
        usersWithNoAssets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usersWithNoAssetsActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 16;
        report1.add(usersWithNoAssets, gridBagConstraints);

        reportsPanel.add(report1, "report1");

        reportsRunPanel.setLayout(new java.awt.GridLayout(1, 1));

        resultsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        resultsPane.setViewportView(resultsTable);

        reportsRunPanel.add(resultsPane);

        reportsPanel.add(reportsRunPanel, "viewResults");

        centerpanelassigns1.add(reportsPanel, "card2");

        viewReports.add(centerpanelassigns1, java.awt.BorderLayout.CENTER);

        topPanelassigns1.setLayout(new java.awt.GridLayout());
        viewReports.add(topPanelassigns1, java.awt.BorderLayout.NORTH);

        centerPanel.add(viewReports, "viewReports");

        GUI.add(centerPanel, java.awt.BorderLayout.CENTER);

        leftPanel.setOpaque(false);
        leftPanel.setPreferredSize(new java.awt.Dimension(120, 0));
        leftPanel.setLayout(new java.awt.GridLayout(10, 1));

        viewAssetsButton.setText("View Assets");
        viewAssetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAssetsButtonActionPerformed(evt);
            }
        });
        leftPanel.add(viewAssetsButton);

        viewUsersButton.setText("View Assignees");
        viewUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewUsersButtonActionPerformed(evt);
            }
        });
        leftPanel.add(viewUsersButton);

        viewInvoicesButton.setText("View Invoices");
        viewInvoicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewInvoicesButtonActionPerformed(evt);
            }
        });
        leftPanel.add(viewInvoicesButton);

        viewAssignsButton.setText("View Assigns");
        viewAssignsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAssignsButtonActionPerformed(evt);
            }
        });
        leftPanel.add(viewAssignsButton);

        Reports.setText("Reports");
        Reports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportsActionPerformed(evt);
            }
        });
        leftPanel.add(Reports);

        viewSettingsButton.setText("Settings");
        viewSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSettingsButtonActionPerformed(evt);
            }
        });
        leftPanel.add(viewSettingsButton);

        GUI.add(leftPanel, java.awt.BorderLayout.WEST);

        topPanel.setOpaque(false);
        topPanel.setPreferredSize(new java.awt.Dimension(40, 40));

        appHeading.setFont(new java.awt.Font("Avenir Next", 0, 24)); // NOI18N
        appHeading.setText("AMS");

        javax.swing.GroupLayout topPanelLayout = new javax.swing.GroupLayout(topPanel);
        topPanel.setLayout(topPanelLayout);
        topPanelLayout.setHorizontalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appHeading, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(422, Short.MAX_VALUE))
        );
        topPanelLayout.setVerticalGroup(
            topPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(topPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(appHeading)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GUI.add(topPanel, java.awt.BorderLayout.NORTH);

        rightPanel.setOpaque(false);
        rightPanel.setPreferredSize(new java.awt.Dimension(120, 0));
        rightPanel.setLayout(new java.awt.GridLayout(10, 1));

        addAssetsButton.setText("Add Assets");
        addAssetsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAssetsButtonActionPerformed(evt);
            }
        });
        rightPanel.add(addAssetsButton);

        addUsersButton.setText("Add Assignee");
        addUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUsersButtonActionPerformed(evt);
            }
        });
        rightPanel.add(addUsersButton);

        addInvoicesButton.setText("Add Invoices");
        addInvoicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInvoicesButtonActionPerformed(evt);
            }
        });
        rightPanel.add(addInvoicesButton);

        GUI.add(rightPanel, java.awt.BorderLayout.EAST);

        bottomPanel.setOpaque(false);
        bottomPanel.setPreferredSize(new java.awt.Dimension(400, 40));

        UserLabel.setText("User:");

        Username.setText(username);

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(UserLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Username)
                .addContainerGap(454, Short.MAX_VALUE))
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserLabel)
                    .addComponent(Username))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        GUI.add(bottomPanel, java.awt.BorderLayout.SOUTH);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(GUI, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(GUI, javax.swing.GroupLayout.DEFAULT_SIZE, 629, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(797, 661));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void viewAssetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAssetsButtonActionPerformed
       CardLayout cl = new CardLayout();
       cl = (CardLayout)centerPanel.getLayout();
       cl.show(centerPanel, "viewAssets");
       
       //Table Reset
       assetsTable = Database.getTableView(connection, "Select * from Assets");
       assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       assetsPane.setViewportView(assetsTable);
       
       //Reset Number label
       
       assignedUserComboBox1.setModel(Database.getComboBoxList(connection, "select CONCAT(IDnumber,': ',firstName,' ',lastName) from Users"));
    }//GEN-LAST:event_viewAssetsButtonActionPerformed

    private void viewUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewUsersButtonActionPerformed
        //Creates card layout 
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        
        //Shows the correct view
        cl.show(centerPanel, "viewUsers");
       
        //Table Reset
       usersTable = Database.getTableView(connection, "Select * from Users");
       usersTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       usersPane.setViewportView(usersTable);
       
       UserIDNumber1.setText(Database.getLastUserIDNumberUsed(connection));
       
        
    }//GEN-LAST:event_viewUsersButtonActionPerformed
    
    
   
    private void viewSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSettingsButtonActionPerformed
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "settings");
    }//GEN-LAST:event_viewSettingsButtonActionPerformed

    private void viewInvoicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInvoicesButtonActionPerformed
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "viewInvoices");
        
        
            
            
             //Table Reset
            invoiceTable = Database.getTableView(connection, "SELECT Invoices.InvoiceNo, Invoices.Date, Invoices.InvoiceAddress, COUNT(Assets.InvoiceNo) AS NumberOfItems, Invoices.Total FROM Invoices LEFT OUTER JOIN Assets On Invoices.InvoiceNo = Assets.InvoiceNo GROUP BY Invoices.InvoiceNo");
            invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            invoicePane.setViewportView(invoiceTable);
    }//GEN-LAST:event_viewInvoicesButtonActionPerformed

    private void addAssetsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAssetsButtonActionPerformed
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "addAssets");
        
        String numberString = Database.getLastAssetNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        assetNumberTextField.setText(Utilities.convertIntToString(numberInt));
        
        //Date
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        //disposalDateTextField.setText(dateFormat.format(date)); 
        purchaseDateTextField.setText(dateFormat.format(date));
        
     
        invoiceNumberComboBox.setModel(Database.getComboBoxList(connection, "Select InvoiceNo from Invoices"));
        
        
    }//GEN-LAST:event_addAssetsButtonActionPerformed

    private void addUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUsersButtonActionPerformed
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "addUsers");
        
        UserIDNumber1.setText(Database.getLastUserIDNumberUsed(connection));
       
        
        String numberString = Database.getLastUserIDNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        idNumberTextField.setText(Utilities.convertIntToString(numberInt));
    }//GEN-LAST:event_addUsersButtonActionPerformed

    private void addInvoicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInvoicesButtonActionPerformed
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "addInvoices");
        
        
            
             //Table Reset
            invoiceTable = Database.getTableView(connection, "SELECT Invoices.InvoiceNo, Invoices.Date, Invoices.InvoiceAddress, COUNT(Assets.InvoiceNo) AS NumberOfItems, Invoices.Total FROM Invoices LEFT OUTER JOIN Assets On Invoices.InvoiceNo = Assets.InvoiceNo GROUP BY Invoices.InvoiceNo");
            invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            invoicePane.setViewportView(invoiceTable);
            
            //Reset Fields
        
        String numberString = Database.getLastInvoiceNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        invoiceNumberTextField.setText(Utilities.convertIntToString(numberInt));
        
        
        InvoiceAddressTextField.setText("");
        InvoiceTotalTextField.setText("0");
        
        
        //Date
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        InvoiceDateTextField.setText(dateFormat.format(date));
    }//GEN-LAST:event_addInvoicesButtonActionPerformed

    private void addAssetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAssetButtonActionPerformed
        
        //Asset Variables
        String assetNumber = "NULL";
        String title = "NULL";
        String location = "NULL";
        String serialNumber = "NULL";
        String type = "NULL";
        String manufacturer = "NULL";
        String model = "NULL";
        String notes = "NULL";
        String unitCost = "NULL";
        String pDate = "NULL";
        String dDate = "NULL";
        
        boolean inputError = false;
        //Input Checks
        
        if (Utilities.isEmptyString(assetNumberTextField.getText())) {
            Utilities.consoleMessage("Asset Number field Empty");
            inputError = true;
            JOptionPane.showMessageDialog(null, "Asset Number field is empty.");
        } 
        
        
        
        if (!Utilities.isEmptyString(titleTextField.getText())) {
            title = titleTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(locationTextField.getText())) {
            location = locationTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(serialNumberTextField.getText())) {
            serialNumber = serialNumberTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(typeTextField.getText())) {
            type = typeTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(manufacturerTextField.getText())) {
            manufacturer = manufacturerTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(modelTextField.getText())) {
            model = modelTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(notesTextField.getText())) {
            notes = notesTextField.getText();
        } 
        
        if (Utilities.isEmptyString(unitCostTextField.getText())) {
            unitCost = "0";
        } else {
            if (!Utilities.isInteger(unitCostTextField.getText())) {
                inputError = true;
                JOptionPane.showMessageDialog(null, "Unit Cost is not a Number.");
            } else {
                unitCost = unitCostTextField.getText();   
            }
        }
        
        if (!Utilities.isEmptyString(purchaseDateTextField.getText())){
            pDate =purchaseDateTextField.getText();
        }
        
        if (!Utilities.isEmptyString(disposalDateTextField.getText())){
            dDate =disposalDateTextField.getText();
        }
        
        //Adding Asset
        Asset newAsset = new Asset();
        newAsset.setAssetNumber(Utilities.convertStringToInt(assetNumberTextField.getText()));
        newAsset.setAssetTitle(title);
        
        switch (statusComboBox.getSelectedIndex()){
            case 0:
                newAsset.assetStatus = Asset.AssetStatus.Operational;
                break;
                
            case 1:
                newAsset.assetStatus = Asset.AssetStatus.Sold;
                break;
                
            case 2:
                newAsset.assetStatus = Asset.AssetStatus.Recycled;
                break;
                
            case 3:
                newAsset.assetStatus = Asset.AssetStatus.Repaired;
                break;
                
        }
        
        newAsset.setAssetLocation(location);
        newAsset.setAssetSerialNumber(serialNumber);
        newAsset.setAssetType(type);
        newAsset.setAssetManufacturer(manufacturer);
        newAsset.setAssetModel(model);
        
        switch (categoryComboBox.getSelectedIndex()){
            case 0:
                newAsset.assetCategory = Asset.AssetCategory.Hardware;
                break;
                
            case 1:
                newAsset.assetCategory = Asset.AssetCategory.Software;
                break;
                   
        }
        
        newAsset.setAssetNotes(notes);
        
        newAsset.setAssetPurchaseDate(pDate);
        
        
        newAsset.setAssetDisposalDate(dDate);
        
        newAsset.setAssetInvoiceNumber(invoiceNumberComboBox.getSelectedItem().toString());
        newAsset.setAssetUnitCost(Utilities.convertStringToInt(unitCost));
        
        if(inputError){
            JOptionPane.showMessageDialog(null, "Asset Not Added");
        } else {
            Database.insertAsset(connection, newAsset);
            Utilities.consoleMessage("Asset Added");
            
            String str = assignedUserComboBox.getSelectedItem().toString(); 
            Utilities.consoleMessage(str);
            String result = str.substring(0, str.indexOf(":"));
            Utilities.consoleMessage(result);
            
            Database.assignAsset(connection, assetNumberTextField.getText(), result);
        }
        
        AssetNumber1.setText(Database.getLastAssetNumberUsed(connection));
        
        
        
        //Reset Fields
        
        String numberString = Database.getLastAssetNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        assetNumberTextField.setText(Utilities.convertIntToString(numberInt));
        
        //Date
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        disposalDateTextField.setText(dateFormat.format(date)); 
        purchaseDateTextField.setText(dateFormat.format(date));
        
        titleTextField.setText("");
        statusComboBox.setSelectedIndex(0);
        locationTextField.setText("");
        serialNumberTextField.setText("");
        typeTextField.setText("");
        manufacturerTextField.setText("");
        modelTextField.setText("");
        categoryComboBox.setSelectedIndex(0);
        notesTextField.setText("");
        invoiceNumberComboBox.setSelectedIndex(0);
        unitCostTextField.setText("");
        
        
        
    }//GEN-LAST:event_addAssetButtonActionPerformed

    private void assetNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assetNumberTextFieldActionPerformed

    private void titleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleTextFieldActionPerformed

    private void locationTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationTextFieldActionPerformed

    private void serialNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serialNumberTextFieldActionPerformed

    private void typeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeTextFieldActionPerformed

    private void manufacturerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manufacturerTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manufacturerTextFieldActionPerformed

    private void modelTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelTextFieldActionPerformed

    private void unitCostTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitCostTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitCostTextFieldActionPerformed

    private void purchaseDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaseDateTextFieldActionPerformed

    private void disposalDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposalDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_disposalDateTextFieldActionPerformed

    private void invoiceNumberComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceNumberComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceNumberComboBoxActionPerformed

    private void deleteAssetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAssetButtonActionPerformed
      
        String assetNumber = null;
        
        int selectedRow = assetsTable.getSelectedRow();
        assetNumber = assetsTable.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(assetNumber);
        if (assetNumber == null) {
            
        } else {
            SQL.delete(connection, "delete from Assets where `assetNumber`='" + assetNumber + "'" );
            
            AssetNumber1.setText(Database.getLastAssetNumberUsed(connection));
            
            
            //Table Reset
            assetsTable = Database.getTableView(connection, "Select * from Assets");
            assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            assetsPane.setViewportView(assetsTable);
            
        }
    }//GEN-LAST:event_deleteAssetButtonActionPerformed

    private void deleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserButtonActionPerformed
        String userNumber = null;
        
        int selectedRow = usersTable.getSelectedRow();
        userNumber = usersTable.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage("Deleted User: "+ userNumber);
        if (userNumber == null) {
            
        } else {
            SQL.delete(connection, "delete from Users where `IDNumber`='" + userNumber + "'" );
            
            UserIDNumber1.setText(Database.getLastUserIDNumberUsed(connection));
            
            
             //Table Reset
            usersTable = Database.getTableView(connection, "Select * from Users");
            usersTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            usersPane.setViewportView(usersTable);
            
        }
    }//GEN-LAST:event_deleteUserButtonActionPerformed

    private void deleteInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteInvoiceButtonActionPerformed
        String invoiceNumber = null;
        
        int selectedRow = invoiceTable.getSelectedRow();
        invoiceNumber = invoiceTable.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(invoiceNumber);
        if (invoiceNumber == null) {
            
        } else {
            SQL.delete(connection, "delete from Invoices where `InvoiceNo`='" + invoiceNumber + "'" );
            
           
             //Table Reset
            invoiceTable = Database.getTableView(connection, "SELECT Invoices.InvoiceNo, Invoices.Date, Invoices.InvoiceAddress, COUNT(Assets.InvoiceNo) AS NumberOfItems, Invoices.Total FROM Invoices LEFT OUTER JOIN Assets On Invoices.InvoiceNo = Assets.InvoiceNo GROUP BY Invoices.InvoiceNo");
            invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            invoicePane.setViewportView(invoiceTable);
        }
    }//GEN-LAST:event_deleteInvoiceButtonActionPerformed

    private void idNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idNumberTextFieldActionPerformed

    private void firstNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextFieldActionPerformed

    private void LastNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LastNameTextFieldActionPerformed

    private void jobTitleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobTitleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobTitleTextFieldActionPerformed

    private void companyTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companyTextFieldActionPerformed

    private void emailAddressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAddressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailAddressTextFieldActionPerformed

    private void telephoneNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telephoneNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telephoneNumberTextFieldActionPerformed

    private void mobileNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNumberTextFieldActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        
        //Asset Variables
        String idNumber = "NULL";
        String firstName = "NULL";
        String lastName = "NULL";
        String jobTitle = "NULL";
        String company = "NULL";
        String emailAddress = "NULL";
        String telephoneNumber = "NULL";
        String mobileNumber = "NULL";
       
       
        boolean inputError = false;
        //Input Checks
        
        if (Utilities.isEmptyString(idNumberTextField.getText())) {
            Utilities.consoleMessage("ID Number field Empty");
            inputError = true;
            JOptionPane.showMessageDialog(null, "ID Number field is empty.");
        } 
        
        
        
        if (!Utilities.isEmptyString(firstNameTextField.getText())) {
            firstName = firstNameTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(LastNameTextField.getText())) {
            lastName = LastNameTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(jobTitleTextField.getText())) {
            jobTitle = jobTitleTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(companyTextField.getText())) {
            company = companyTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(emailAddressTextField.getText())) {
            emailAddress = emailAddressTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(telephoneNumberTextField.getText())) {
            telephoneNumber = telephoneNumberTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(mobileNumberTextField.getText())) {
            mobileNumber = mobileNumberTextField.getText();
        } 
        
        
        
        
        //Adding User
        User newUser = new User();
        newUser.setIDnumber(Utilities.convertStringToInt(idNumberTextField.getText()));
        newUser.setPersonName(firstName,lastName);
        
           
        
        newUser.setJobTitle(jobTitle);
        newUser.setCompany(company);
        newUser.setEmailAddress(emailAddress);
        newUser.setTelephoneNumber(telephoneNumber);
        newUser.setMobileNumber(mobileNumber);
        
       
        
        if(inputError){
            JOptionPane.showMessageDialog(null, "User Not Added");
        } else {
            Database.insertUser(connection, newUser);
            Utilities.consoleMessage("User Added");
        }
        
        UserIDNumber1.setText(Database.getLastUserIDNumberUsed(connection));
        
        
        //Reset Fields
        
        String numberString = Database.getLastUserIDNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        idNumberTextField.setText(Utilities.convertIntToString(numberInt));
        
        
        firstNameTextField.setText("");
        LastNameTextField.setText("");
        jobTitleTextField.setText("");
        companyTextField.setText("");
        emailAddressTextField.setText("");
        telephoneNumberTextField.setText("");
        mobileNumberTextField.setText("");
        
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void invoiceNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceNumberTextFieldActionPerformed

    private void InvoiceAddressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceAddressTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceAddressTextFieldActionPerformed

    private void InvoiceTotalTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceTotalTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceTotalTextFieldActionPerformed

    private void addInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInvoiceButtonActionPerformed
        //Asset Variables
        String invoiceNumber = "NULL";
        String invoiceAddess = "NULL";
        String invoiceDate = "NULL";
        Integer invoiceTotal = 0;
        
       
        boolean inputError = false;
        //Input Checks
        
        if (Utilities.isEmptyString(invoiceNumberTextField.getText())) {
            Utilities.consoleMessage("Invoice Number field Empty");
            inputError = true;
            JOptionPane.showMessageDialog(null, "Invoice number field is empty.");
        }  else {
            invoiceNumber = invoiceNumberTextField.getText();
        }
        
        
        
        if (!Utilities.isEmptyString(InvoiceAddressTextField.getText())) {
            invoiceAddess = InvoiceAddressTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(InvoiceDateTextField.getText())) {
            invoiceDate = InvoiceDateTextField.getText();
        } 
        
        if (!Utilities.isEmptyString(InvoiceTotalTextField.getText())) {
            invoiceTotal = Utilities.convertStringToInt(InvoiceTotalTextField.getText());
        } 
        
        
        
        
        
        //Adding Invoice
        Invoice newInvoice = new Invoice();
        newInvoice.setInvoiceNumber(invoiceNumber);
        newInvoice.setInvoiceAddress(invoiceAddess);
        
        
        
        newInvoice.setInvoiceDate(invoiceDate);
        newInvoice.setInvoiceTotal(invoiceTotal);
       
        
       
        
        if(inputError){
            JOptionPane.showMessageDialog(null, "Invoice Not Added");
        } else {
            Database.insertInvoice(connection, newInvoice);
            Utilities.consoleMessage("Invoice Added");
        }
       
        UserIDNumber1.setText(Database.getLastInvoiceNumberUsed(connection));
        
        
        //Reset Fields
        
        String numberString = Database.getLastInvoiceNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        invoiceNumberTextField.setText(Utilities.convertIntToString(numberInt));
        
        
        InvoiceAddressTextField.setText("");
        InvoiceTotalTextField.setText("0");
        
        
        //Date
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        InvoiceDateTextField.setText(dateFormat.format(date));
        
    }//GEN-LAST:event_addInvoiceButtonActionPerformed

    private void InvoiceDateTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceDateTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceDateTextFieldActionPerformed

    private void viewAssetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAssetButtonActionPerformed
        
        
        String assetNumber = null;
        Asset selectedAsset = new Asset();
        
        int selectedRow = assetsTable.getSelectedRow();
        assetNumber = assetsTable.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(assetNumber);
        if (assetNumber == null) {
            
        } else {
            selectedAsset = Database.getAssetAt(connection, selectedRow, assetsTable);
        }
        
        
        
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "viewSelectedAssets");
        
        assetNumberTextField1.setText(Utilities.convertIntToString(selectedAsset.getAssetNumber()));
        titleTextField1.setText(selectedAsset.getAssetTitle());
        
        
        statusComboBox1.setSelectedItem(selectedAsset.getAssetStatus());
        
        locationTextField1.setText(selectedAsset.getAssetLocation());
        serialNumberTextField1.setText(selectedAsset.getAssetSerialNumber());
        typeTextField1.setText(selectedAsset.getAssetType());
        manufacturerTextField1.setText(selectedAsset.getAssetManufacturer());
        modelTextField1.setText(selectedAsset.getAssetModel());
        
        
        categoryComboBox1.setSelectedItem(selectedAsset.getAssetCategory());
        
        notesTextField1.setText(selectedAsset.getAssetNotes());
        purchaseDateTextField1.setText(selectedAsset.getAssetPurchaseDate());
        disposalDateTextField1.setText(selectedAsset.getAssetDisposalDate());
        
        invoiceNumberComboBox1.setSelectedItem(selectedAsset.getAssetInvoiceNumber());
        unitCostTextField1.setText(Utilities.convertIntToString(selectedAsset.getAssetUnitCost()));
        
        String query = "Select CONCAT(AssetOwners.IDnumber,': ', Users.firstName,' ', Users.lastName) AS name from AssetOwners \n" +
                "INNER join Users \n" +
                "on AssetOwners.IDnumber = Users.IDnumber\n" +
                "where AssetOwners.assetNumber = "+assetNumber+"";

        Statement st = null;
        try {
            st = connection.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }

        ResultSet rs = null;
        try {
            rs = st.executeQuery(query);
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }

        String name = "";

        try {
            while (rs.next()) {
                name = rs.getString("name");
            }
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        assignedUserComboBox1.setSelectedItem(name);
        
    }//GEN-LAST:event_viewAssetButtonActionPerformed

    private void assetNumberTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetNumberTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assetNumberTextField1ActionPerformed

    private void titleTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_titleTextField1ActionPerformed

    private void locationTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_locationTextField1ActionPerformed

    private void serialNumberTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serialNumberTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_serialNumberTextField1ActionPerformed

    private void typeTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeTextField1ActionPerformed

    private void manufacturerTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manufacturerTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manufacturerTextField1ActionPerformed

    private void modelTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modelTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modelTextField1ActionPerformed

    private void disposalDateTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disposalDateTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_disposalDateTextField1ActionPerformed

    private void purchaseDateTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseDateTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchaseDateTextField1ActionPerformed

    private void invoiceNumberComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceNumberComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceNumberComboBox1ActionPerformed

    private void unitCostTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitCostTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitCostTextField1ActionPerformed

    private void updateAssetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAssetButtonActionPerformed
        //Asset Variables
        String assetNumber = "NULL";
        String title = "NULL";
        String location = "NULL";
        String serialNumber = "NULL";
        String type = "NULL";
        String manufacturer = "NULL";
        String model = "NULL";
        String notes = "NULL";
        String unitCost = "NULL";
        String pDate = "NULL";
        String dDate = "NULL";
        
        boolean inputError = false;
        //Input Checks
        
        if (Utilities.isEmptyString(assetNumberTextField1.getText())) {
            Utilities.consoleMessage("Asset Number field Empty");
            inputError = true;
            JOptionPane.showMessageDialog(null, "Asset Number field is empty.");
        } 
        
        
        
        if (!Utilities.isEmptyString(titleTextField1.getText())) {
            title = titleTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(locationTextField1.getText())) {
            location = locationTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(serialNumberTextField1.getText())) {
            serialNumber = serialNumberTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(typeTextField1.getText())) {
            type = typeTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(manufacturerTextField1.getText())) {
            manufacturer = manufacturerTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(modelTextField1.getText())) {
            model = modelTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(notesTextField1.getText())) {
            notes = notesTextField1.getText();
        } 
        
        if (Utilities.isEmptyString(unitCostTextField1.getText())) {
            unitCost = "0";
        } else {
            if (!Utilities.isInteger(unitCostTextField1.getText())) {
                inputError = true;
                JOptionPane.showMessageDialog(null, "Unit Cost is not a Number.");
            } else {
                unitCost = unitCostTextField1.getText();   
            }
        }
        
        if (!Utilities.isEmptyString(purchaseDateTextField1.getText())){
            pDate = purchaseDateTextField1.getText();
        }
        
        if (!Utilities.isEmptyString(disposalDateTextField1.getText())){
            dDate = disposalDateTextField1.getText();
        }
        
        //Adding Asset
        Asset newAsset = new Asset();
        newAsset.setAssetNumber(Utilities.convertStringToInt(assetNumberTextField1.getText()));
        newAsset.setAssetTitle(title);
        
        switch (statusComboBox1.getSelectedIndex()){
            case 0:
                newAsset.assetStatus = Asset.AssetStatus.Operational;
                break;
                
            case 1:
                newAsset.assetStatus = Asset.AssetStatus.Sold;
                break;
                
            case 2:
                newAsset.assetStatus = Asset.AssetStatus.Recycled;
                break;
                
            case 3:
                newAsset.assetStatus = Asset.AssetStatus.Repaired;
                break;
                
        }
        
        newAsset.setAssetLocation(location);
        newAsset.setAssetSerialNumber(serialNumber);
        newAsset.setAssetType(type);
        newAsset.setAssetManufacturer(manufacturer);
        newAsset.setAssetModel(model);
        
        switch (categoryComboBox1.getSelectedIndex()){
            case 0:
                newAsset.assetCategory = Asset.AssetCategory.Hardware;
                break;
                
            case 1:
                newAsset.assetCategory = Asset.AssetCategory.Software;
                break;
                   
        }
        
        newAsset.setAssetNotes(notes);
        
        newAsset.setAssetPurchaseDate(pDate);
        
        
        newAsset.setAssetDisposalDate(dDate);
        
        newAsset.setAssetInvoiceNumber(invoiceNumberComboBox1.getSelectedItem().toString());
        newAsset.setAssetUnitCost(Utilities.convertStringToInt(unitCost));
        
        if(inputError){
            JOptionPane.showMessageDialog(null, "Asset Not Updated");
        } else {
            Database.updateAsset(connection, newAsset, Utilities.convertIntToString(newAsset.getAssetNumber()));
            Utilities.consoleMessage("Asset Updated");
            
            String str = assignedUserComboBox1.getSelectedItem().toString(); 
            Utilities.consoleMessage(str);
            String result = str.substring(0, str.indexOf(":"));
            Utilities.consoleMessage(result);
            
            Database.assignAssetUpdate(connection, assetNumberTextField1.getText(), result);
        }
        
        AssetNumber1.setText(Database.getLastAssetNumberUsed(connection));
      
        
        
        //Reset Fields
        
        String numberString = Database.getLastAssetNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        assetNumberTextField1.setText(Utilities.convertIntToString(numberInt));
        
        //Date
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        disposalDateTextField1.setText(dateFormat.format(date)); 
        purchaseDateTextField1.setText(dateFormat.format(date));
        
        titleTextField1.setText("");
        statusComboBox1.setSelectedIndex(0);
        locationTextField1.setText("");
        serialNumberTextField1.setText("");
        typeTextField1.setText("");
        manufacturerTextField1.setText("");
        modelTextField1.setText("");
        categoryComboBox1.setSelectedIndex(0);
        notesTextField1.setText("");
        invoiceNumberComboBox1.setSelectedIndex(0);
        unitCostTextField1.setText("");
        
        CardLayout cl = new CardLayout();
       cl = (CardLayout)centerPanel.getLayout();
       cl.show(centerPanel, "viewAssets");
       
       //Table Reset
       assetsTable = Database.getTableView(connection, "Select * from Assets");
       assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       assetsPane.setViewportView(assetsTable);
       
       
    }//GEN-LAST:event_updateAssetButtonActionPerformed

    private void categoryComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryComboBox1ActionPerformed

    private void invoiceNumberTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoiceNumberTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_invoiceNumberTextField1ActionPerformed

    private void InvoiceDateTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceDateTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceDateTextField1ActionPerformed

    private void InvoiceAddressTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceAddressTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceAddressTextField1ActionPerformed

    private void InvoiceTotalTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvoiceTotalTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InvoiceTotalTextField1ActionPerformed

    private void updateInvoiceButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateInvoiceButton1ActionPerformed
        //Asset Variables
        String invoiceNumber = "NULL";
        String invoiceAddess = "NULL";
        String invoiceDate = "NULL";
        Integer invoiceTotal = 0;
        String selector = invoiceNumberTextField1.getText();
        
       
        boolean inputError = false;
        //Input Checks
        
        if (Utilities.isEmptyString(invoiceNumberTextField1.getText())) {
            Utilities.consoleMessage("Invoice Number field Empty");
            inputError = true;
            JOptionPane.showMessageDialog(null, "Invoice number field is empty.");
        }  else {
            invoiceNumber = invoiceNumberTextField1.getText();
        }
        
        
        
        if (!Utilities.isEmptyString(InvoiceAddressTextField1.getText())) {
            invoiceAddess = InvoiceAddressTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(InvoiceDateTextField1.getText())) {
            invoiceDate = InvoiceDateTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(InvoiceTotalTextField1.getText())) {
            invoiceTotal = Utilities.convertStringToInt(InvoiceTotalTextField1.getText());
        } 
        
        
        
        
        
        //Adding Invoice
        Invoice newInvoice = new Invoice();
        newInvoice.setInvoiceNumber(invoiceNumber);
        newInvoice.setInvoiceAddress(invoiceAddess);
        
        
        
        newInvoice.setInvoiceDate(invoiceDate);
        newInvoice.setInvoiceTotal(invoiceTotal);
       
        
       
        
        if(inputError){
            JOptionPane.showMessageDialog(null, "Invoice Not Updated");
        } else {
            Database.updateInvoice(connection, newInvoice, selector);
            Utilities.consoleMessage("Invoice Updated");
        }
        
        
        UserIDNumber1.setText(Database.getLastInvoiceNumberUsed(connection));
        
        
        //Reset Fields
        
        String numberString = Database.getLastInvoiceNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        invoiceNumberTextField1.setText(Utilities.convertIntToString(numberInt));
        
        
        InvoiceAddressTextField1.setText("");
        InvoiceTotalTextField1.setText("0");
        
        
        //Date
        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
        Date date = new Date();
        InvoiceDateTextField1.setText(dateFormat.format(date));
        
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "viewInvoices");
        
        
            
            
             //Table Reset
            invoiceTable = Database.getTableView(connection, "SELECT Invoices.InvoiceNo, Invoices.Date, Invoices.InvoiceAddress, COUNT(Assets.InvoiceNo) AS NumberOfItems, Invoices.Total FROM Invoices LEFT OUTER JOIN Assets On Invoices.InvoiceNo = Assets.InvoiceNo GROUP BY Invoices.InvoiceNo");
            invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            invoicePane.setViewportView(invoiceTable);
    }//GEN-LAST:event_updateInvoiceButton1ActionPerformed

    private void viewInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewInvoiceButtonActionPerformed
        String inVoiceNumber = null;
        Invoice selectedInvoice = new Invoice();
        
        int selectedRow = invoiceTable.getSelectedRow();
        inVoiceNumber = invoiceTable.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(inVoiceNumber);
        if (inVoiceNumber == null) {
            
        } else {
            selectedInvoice = Database.getInvoiceAt(connection, selectedRow, invoiceTable);
        }
        
        
        
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "viewSelectedInvoice");
        
        invoiceNumberTextField1.setText(selectedInvoice.getInvoiceNumber());
        InvoiceAddressTextField1.setText(selectedInvoice.getInvoiceAddress());

        InvoiceDateTextField1.setText(selectedInvoice.getInvoiceDate());
        InvoiceTotalTextField1.setText(Utilities.convertIntToString(selectedInvoice.getInvoiceTotal()));
        
    }//GEN-LAST:event_viewInvoiceButtonActionPerformed

    private void searchAssetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAssetsActionPerformed
        assetsTable = Database.searchAssets(connection, searchField.getText());
        assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        assetsPane.setViewportView(assetsTable);
    }//GEN-LAST:event_searchAssetsActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        assetsTable = Database.searchAssets(connection, searchField.getText());
        assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        assetsPane.setViewportView(assetsTable);
    }//GEN-LAST:event_searchFieldActionPerformed

    private void searchField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchField1ActionPerformed
        usersTable = Database.searchUsers(connection, searchField1.getText());
            usersTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            usersPane.setViewportView(usersTable);
    }//GEN-LAST:event_searchField1ActionPerformed

    private void searchUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUsersActionPerformed
        usersTable = Database.searchUsers(connection, searchField1.getText());
            usersTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            usersPane.setViewportView(usersTable);
    }//GEN-LAST:event_searchUsersActionPerformed

    private void searchInvoicesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchInvoicesActionPerformed
        invoiceTable = Database.searchInvoices(connection, searchField2.getText());
            invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            invoicePane.setViewportView(invoiceTable);
    }//GEN-LAST:event_searchInvoicesActionPerformed

    private void searchField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchField2ActionPerformed
        invoiceTable = Database.searchInvoices(connection, searchField2.getText());
            invoiceTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            invoicePane.setViewportView(invoiceTable);
    }//GEN-LAST:event_searchField2ActionPerformed

    private void idNumberTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idNumberTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idNumberTextField1ActionPerformed

    private void firstNameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstNameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_firstNameTextField1ActionPerformed

    private void LastNameTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LastNameTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LastNameTextField1ActionPerformed

    private void jobTitleTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobTitleTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobTitleTextField1ActionPerformed

    private void companyTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_companyTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_companyTextField1ActionPerformed

    private void emailAddressTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailAddressTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailAddressTextField1ActionPerformed

    private void telephoneNumberTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telephoneNumberTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telephoneNumberTextField1ActionPerformed

    private void mobileNumberTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mobileNumberTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mobileNumberTextField1ActionPerformed

    private void updateUserButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateUserButton1ActionPerformed
        
        //Asset Variables
        String idNumber = "NULL";
        String firstName = "NULL";
        String lastName = "NULL";
        String jobTitle = "NULL";
        String company = "NULL";
        String emailAddress = "NULL";
        String telephoneNumber = "NULL";
        String mobileNumber = "NULL";
       
       
        boolean inputError = false;
        //Input Checks
        
        if (Utilities.isEmptyString(idNumberTextField1.getText())) {
            Utilities.consoleMessage("ID Number field Empty");
            inputError = true;
            JOptionPane.showMessageDialog(null, "ID Number field is empty.");
        } 
        
        
        
        if (!Utilities.isEmptyString(firstNameTextField1.getText())) {
            firstName = firstNameTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(LastNameTextField1.getText())) {
            lastName = LastNameTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(jobTitleTextField1.getText())) {
            jobTitle = jobTitleTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(companyTextField1.getText())) {
            company = companyTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(emailAddressTextField1.getText())) {
            emailAddress = emailAddressTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(telephoneNumberTextField1.getText())) {
            telephoneNumber = telephoneNumberTextField1.getText();
        } 
        
        if (!Utilities.isEmptyString(mobileNumberTextField1.getText())) {
            mobileNumber = mobileNumberTextField1.getText();
        } 
        
        
        
        
        //Adding User
        User newUser = new User();
        newUser.setIDnumber(Utilities.convertStringToInt(idNumberTextField1.getText()));
        newUser.setPersonName(firstName,lastName);
        
           
        
        newUser.setJobTitle(jobTitle);
        newUser.setCompany(company);
        newUser.setEmailAddress(emailAddress);
        newUser.setTelephoneNumber(telephoneNumber);
        newUser.setMobileNumber(mobileNumber);
        
       
        
        if(inputError){
            JOptionPane.showMessageDialog(null, "User Not Updated");
        } else {
            Database.updateUser(connection, newUser, idNumberTextField1.getText());
            Utilities.consoleMessage("User Updated");
        }
        
        
        UserIDNumber1.setText(Database.getLastUserIDNumberUsed(connection));
        
        
        //Reset Fields
        
        String numberString = Database.getLastUserIDNumberUsed(connection);
        int numberInt = Utilities.convertStringToInt(numberString) + 1;
        
        idNumberTextField1.setText(Utilities.convertIntToString(numberInt));
        
        
        firstNameTextField1.setText("");
        LastNameTextField1.setText("");
        jobTitleTextField1.setText("");
        companyTextField1.setText("");
        emailAddressTextField1.setText("");
        telephoneNumberTextField1.setText("");
        mobileNumberTextField1.setText("");
        
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        
        //Shows the correct view
        cl.show(centerPanel, "viewUsers");
       
        //Table Reset
       usersTable = Database.getTableView(connection, "Select * from Users");
       usersTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       usersPane.setViewportView(usersTable);
       
       UserIDNumber1.setText(Database.getLastUserIDNumberUsed(connection));
       
    }//GEN-LAST:event_updateUserButton1ActionPerformed

    private void viewUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewUserButtonActionPerformed
        String IdNumber = null;
        User selectedUser = new User();
        
        int selectedRow = usersTable.getSelectedRow();
        IdNumber = usersTable.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(IdNumber);
        if (IdNumber == null) {
            
        } else {
            selectedUser = Database.getUserAt(connection, selectedRow, usersTable);
        }
        
        
        
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "viewSelectedUser");
        
        idNumberTextField1.setText(Utilities.convertIntToString(selectedUser.getIDnumber()));
        firstNameTextField1.setText(selectedUser.getFirstName());
        LastNameTextField1.setText(selectedUser.getLastName());
        jobTitleTextField1.setText(selectedUser.getJobTitle());
        companyTextField1.setText(selectedUser.getCompany());
        emailAddressTextField1.setText((selectedUser.getEmailAddress()));
        telephoneNumberTextField1.setText(selectedUser.getTelephoneNumber());
        mobileNumberTextField1.setText(selectedUser.getMobileNumber());
                
        
    }//GEN-LAST:event_viewUserButtonActionPerformed

    private void addUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserActionPerformed
        CardLayout cl = new CardLayout();
       cl = (CardLayout)View.getLayout();
       cl.show(View, "addUser");
       
    }//GEN-LAST:event_addUserActionPerformed

    private void createUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createUserButtonActionPerformed
        Database.addUser(connection, usernameTextField.getText(), passwordField.getText(), userTypeComboBox.getSelectedItem().toString());
        usernameTextField.setText("");
        passwordField.setText("");
        userTypeComboBox.setSelectedIndex(0);
    }//GEN-LAST:event_createUserButtonActionPerformed

    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        usersTable1 = Database.getTableView(connection, "select DISTINCT mysql.db.`User`, mysql.db.Select_priv, mysql.db.Insert_priv, mysql.db.Update_priv, mysql.db.Delete_priv, mysql.db.Create_priv from mysql.db where mysql.db.Db='ampdatabase'");
        usersTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       usersPane1.setViewportView(usersTable1);
       
       CardLayout cl = new CardLayout();
       cl = (CardLayout)View.getLayout();
       cl.show(View, "viewUser");
    }//GEN-LAST:event_viewButtonActionPerformed

    private void viewAssignsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAssignsButtonActionPerformed
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "viewAssigns");
        
        
            
            
             //Table Reset
            assignsTable = Database.getTableView(connection, "Select CONCAT(AssetOwners.IDnumber,': ', Users.firstName,' ', Users.lastName) as 'assetOwner', AssetOwners.assetNumber, Assets.model, Assets.location, Assets.`status`\n" +
                "FROM AssetOwners \n" +
                "INNER join Users on AssetOwners.IDnumber = Users.IDnumber\n" +
                "inner join Assets on Assets.assetNumber = AssetOwners.assetNumber;");
            assignsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            assignsPane.setViewportView(assignsTable);
    }//GEN-LAST:event_viewAssignsButtonActionPerformed

    private void deleteassignButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteassignButtonActionPerformed
        String assetNumber = null;
        
        int selectedRow = assignsTable.getSelectedRow();
        assetNumber = assignsTable.getValueAt(selectedRow, 1).toString();
        Utilities.consoleMessage(assetNumber);
        if (assetNumber == null) {
            
        } else {
            SQL.delete(connection, "delete from AssetOwners where `assetNumber`='" + assetNumber + "'" );
            
            
            
            //Table Reset
            assignsTable = Database.getTableView(connection, "Select CONCAT(AssetOwners.IDnumber,': ', Users.firstName,' ', Users.lastName) as 'assetOwner', AssetOwners.assetNumber, Assets.model, Assets.location, Assets.`status`\n" +
                "FROM AssetOwners \n" +
                "INNER join Users on AssetOwners.IDnumber = Users.IDnumber\n" +
                "inner join Assets on Assets.assetNumber = AssetOwners.assetNumber;");
            assignsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            assignsPane.setViewportView(assignsTable);
        }
    }//GEN-LAST:event_deleteassignButtonActionPerformed

    private void searchAssignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchAssignsActionPerformed
        assignsTable = Database.searchAssigns(connection, searchField3.getText());
        assignsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        assignsPane.setViewportView(assignsTable);
    }//GEN-LAST:event_searchAssignsActionPerformed

    private void searchField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchField3ActionPerformed

    private void deleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserActionPerformed
         String username1 = null;
        
        int selectedRow = usersTable1.getSelectedRow();
        username1 = usersTable1.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(username1);
        if (username1 == null) {
            
        } else {
            SQL.delete(connection, "delete from `mysql`.`db` where `User`='" + username1 + "'" );
             
            
            //Table Reset
            usersTable1 = Database.getTableView(connection, "select DISTINCT mysql.db.`User`, mysql.db.Select_priv, mysql.db.Insert_priv, mysql.db.Update_priv, mysql.db.Delete_priv, mysql.db.Create_priv from mysql.db where mysql.db.Db='ampdatabase'");
            usersTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            usersPane1.setViewportView(usersTable1);
        }
    }//GEN-LAST:event_deleteUserActionPerformed

    private void editUserButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserButton1ActionPerformed
        Database.editUser(connection, usernameTextField1.getText(), passwordField1.getText(), userTypeComboBox1.getSelectedItem().toString());
        usernameTextField1.setText("");
        passwordField1.setText("");
        userTypeComboBox1.setSelectedIndex(0);
    }//GEN-LAST:event_editUserButton1ActionPerformed

    private void editUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editUserActionPerformed
        String username = null;
        
        
        int selectedRow = usersTable1.getSelectedRow();
        username = usersTable1.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(username);
        if (username == null) {
            
        } else {
            usernameTextField1.setText(username);
            passwordField1.setText("");
            
            if (usersTable1.getValueAt(selectedRow, 3).toString().charAt(0) == 'N') {
                userTypeComboBox1.setSelectedIndex(0);
            } else if (usersTable1.getValueAt(selectedRow, 4).toString().charAt(0) == 'N'){
                userTypeComboBox1.setSelectedIndex(1);
            } else if (usersTable1.getValueAt(selectedRow, 5).toString().charAt(0) == 'N'){
                userTypeComboBox1.setSelectedIndex(2);
            } else if (usersTable1.getValueAt(selectedRow, 5).toString().charAt(0) == 'Y'){
                userTypeComboBox1.setSelectedIndex(3);
            }
            
        }
        
        
        
        CardLayout cl = new CardLayout();
        cl = (CardLayout)View.getLayout();
        cl.show(View, "editUser");

        
        
    }//GEN-LAST:event_editUserActionPerformed

    private void assignedUserComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignedUserComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_assignedUserComboBox1ActionPerformed

    private void viewAssetsForButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAssetsForButtonActionPerformed
        CardLayout cl = new CardLayout();
       cl = (CardLayout)centerPanel.getLayout();
       cl.show(centerPanel, "viewAssets");
       
       String command = "SELECT Assets.assetNumber, Assets.title, Assets.`status`, Assets.location, Assets.serialNumber, Assets.type,Assets.manufacturer, Assets.model, Assets.category, Assets.notes, Assets.purchaseDate, Assets.disposalDate, Assets.InvoiceNo, Assets.UnitCost "
               + "FROM AssetOwners "
               + "INNER JOIN Assets on AssetOwners.assetNumber = Assets.assetNumber "
               + "WHERE IDnumber = '" + idNumberTextField1.getText() + "'";
       
        assetsTable = Database.getTableView(connection, command);
        assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        assetsPane.setViewportView(assetsTable);
    }//GEN-LAST:event_viewAssetsForButtonActionPerformed

    private void copyAssetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyAssetButtonActionPerformed
        String assetNumber = null;
        Asset selectedAsset = new Asset();
        
        int selectedRow = assetsTable.getSelectedRow();
        assetNumber = assetsTable.getValueAt(selectedRow, 0).toString();
        Utilities.consoleMessage(assetNumber);
        if (assetNumber == null) {
            
        } else {
            selectedAsset = Database.getAssetAt(connection, selectedRow, assetsTable);
        }
        
        
        int assetnumberint = Utilities.convertStringToInt(Database.getLastAssetNumberUsed(connection)) + 1;
       
        selectedAsset.setAssetNumber(assetnumberint);
        
        //Asset Variables
        
        String title = "NULL";
        String location = "NULL";
        String serialNumber = "NULL";
        String type = "NULL";
        String manufacturer = "NULL";
        String model = "NULL";
        String notes = "NULL";
        String unitCost = "NULL";
        String pDate = "NULL";
        String dDate = "NULL";
        
        boolean inputError = false;
        //Input Checks

        
        if (Utilities.isEmptyString(selectedAsset.getAssetTitle())) {
            selectedAsset.setAssetTitle(title);
        } 
        
        if (Utilities.isEmptyString(selectedAsset.getAssetLocation())) {
            selectedAsset.setAssetLocation(location);
        } 
        
        if (Utilities.isEmptyString(selectedAsset.getAssetSerialNumber())) {
            selectedAsset.setAssetSerialNumber(serialNumber);
        } 
        
        if (Utilities.isEmptyString(selectedAsset.getAssetType())) {
            selectedAsset.setAssetType(type);
        } 
        
        if (Utilities.isEmptyString(selectedAsset.getAssetManufacturer())) {
            selectedAsset.setAssetManufacturer(manufacturer);
        } 
        
        if (Utilities.isEmptyString(selectedAsset.getAssetModel())) {
            selectedAsset.setAssetModel(model);
        } 
        
        if (Utilities.isEmptyString(selectedAsset.getAssetNotes())) {
            selectedAsset.setAssetNotes(notes);
        } 
        
        
        if (Utilities.isEmptyString(selectedAsset.getAssetPurchaseDate())){
            selectedAsset.setAssetPurchaseDate(pDate);
        }
        
        if (Utilities.isEmptyString(selectedAsset.getAssetDisposalDate())){
            selectedAsset.setAssetDisposalDate(dDate);
        }
        
        Database.insertAsset(connection, selectedAsset);
        
         //Table Reset
       assetsTable = Database.getTableView(connection, "Select * from Assets");
       assetsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       assetsPane.setViewportView(assetsTable);
        
    }//GEN-LAST:event_copyAssetButtonActionPerformed

    private void ReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportsActionPerformed
        CardLayout cl = new CardLayout();
        cl = (CardLayout)centerPanel.getLayout();
        cl.show(centerPanel, "viewReports");
        
        CardLayout cl2 = new CardLayout();
        cl2 = (CardLayout)reportsPanel.getLayout();
        cl2.show(reportsPanel, "report1");
        
        numberOfAssets.setText(Database.getNumberOfAssets(connection));
        numberOfAssignees.setText(Database.getNumberOfAssignees(connection));
        numberOfInvoices.setText(Database.getNumberOfInvoices(connection));
        totalOfInvoices.setText(Database.getCostOfInvoices(connection));
        costOfAssets.setText(Database.getCostOfAssets(connection));
        locationComboBox.setModel(Database.getComboBoxList(connection, "SELECT DISTINCT Location From Assets"));
        
        
    }//GEN-LAST:event_ReportsActionPerformed

    private void assetWithNoOwnersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetWithNoOwnersActionPerformed
        resultsTable = Database.getTableView(connection, "Select * FROM Assets WHERE  assetNumber NOT IN (SELECT assetNumber FROM AssetOwners)");
        resultsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       resultsPane.setViewportView(resultsTable);
       
       CardLayout cl = new CardLayout();
       cl = (CardLayout)reportsPanel.getLayout();
       cl.show(reportsPanel, "viewResults");
    }//GEN-LAST:event_assetWithNoOwnersActionPerformed

    private void assetsFromLocationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assetsFromLocationActionPerformed
        resultsTable = Database.getTableView(connection, "Select * From Assets WHERE location = '" + locationComboBox.getSelectedItem().toString() + "'");
        resultsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       resultsPane.setViewportView(resultsTable);
       
       CardLayout cl = new CardLayout();
       cl = (CardLayout)reportsPanel.getLayout();
       cl.show(reportsPanel, "viewResults");
    }//GEN-LAST:event_assetsFromLocationActionPerformed

    private void purchasedInLastYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchasedInLastYearActionPerformed
        resultsTable = Database.getTableView(connection, "SELECT * FROM Assets WHERE datediff(curdate(), Assets.purchaseDate) <= 365");
        resultsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       resultsPane.setViewportView(resultsTable);
       
       CardLayout cl = new CardLayout();
       cl = (CardLayout)reportsPanel.getLayout();
       cl.show(reportsPanel, "viewResults");
    }//GEN-LAST:event_purchasedInLastYearActionPerformed

    private void usersWithNoAssetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usersWithNoAssetsActionPerformed
        resultsTable = Database.getTableView(connection, "SELECT * FROM Users WHERE  IDnumber NOT IN (SELECT IDnumber FROM AssetOwners)");
        resultsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
       resultsPane.setViewportView(resultsTable);
       
       CardLayout cl = new CardLayout();
       cl = (CardLayout)reportsPanel.getLayout();
       cl.show(reportsPanel, "viewResults");
    }//GEN-LAST:event_usersWithNoAssetsActionPerformed
    
    /**
     * @param args the command line arguments
     */
   public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frontEndGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frontEndGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frontEndGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frontEndGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frontEndGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AssetNumber1;
    private javax.swing.JLabel AssetNumber3;
    private javax.swing.JLabel AssetNumberLabel1;
    private javax.swing.JLabel AssetNumberLabel3;
    private javax.swing.JPanel GUI;
    private javax.swing.JLabel IDNumberLabel;
    private javax.swing.JLabel IDNumberLabel1;
    private javax.swing.JLabel InvoiceAddressLabel;
    private javax.swing.JLabel InvoiceAddressLabel1;
    private javax.swing.JTextField InvoiceAddressTextField;
    private javax.swing.JTextField InvoiceAddressTextField1;
    private javax.swing.JLabel InvoiceDateLabel;
    private javax.swing.JLabel InvoiceDateLabel1;
    private javax.swing.JFormattedTextField InvoiceDateTextField;
    private javax.swing.JFormattedTextField InvoiceDateTextField1;
    private javax.swing.JLabel InvoiceNumberLabel2;
    private javax.swing.JLabel InvoiceNumberLabel3;
    private javax.swing.JTextField InvoiceTotalTextField;
    private javax.swing.JTextField InvoiceTotalTextField1;
    private javax.swing.JTextField LastNameTextField;
    private javax.swing.JTextField LastNameTextField1;
    private javax.swing.JButton Reports;
    private javax.swing.JPanel SettingButtons;
    private javax.swing.JLabel TotalLabel;
    private javax.swing.JLabel TotalLabel1;
    private javax.swing.JLabel UserIDNumber1;
    private javax.swing.JLabel UserIDNumber2;
    private javax.swing.JLabel UserIDNumberLabel1;
    private javax.swing.JLabel UserIDNumberLabel2;
    private javax.swing.JLabel UserLabel;
    private javax.swing.JLabel Username;
    private javax.swing.JPanel View;
    private javax.swing.JButton addAssetButton;
    private javax.swing.JButton addAssetsButton;
    private javax.swing.JPanel addAssetsPanel;
    private javax.swing.JButton addInvoiceButton;
    private javax.swing.JButton addInvoicesButton;
    private javax.swing.JPanel addInvoicesPanel;
    private javax.swing.JButton addUser;
    private javax.swing.JButton addUserButton;
    private javax.swing.JPanel addUserPanel;
    private javax.swing.JButton addUsersButton;
    private javax.swing.JPanel addUsersPanel;
    private javax.swing.JLabel appHeading;
    private javax.swing.JLabel assetNumberLabel;
    private javax.swing.JLabel assetNumberLabel1;
    private javax.swing.JTextField assetNumberTextField;
    private javax.swing.JTextField assetNumberTextField1;
    private javax.swing.JButton assetWithNoOwners;
    private javax.swing.JButton assetsFromLocation;
    private javax.swing.JScrollPane assetsPane;
    private javax.swing.JTable assetsTable;
    private javax.swing.JComboBox assignedUserComboBox;
    private javax.swing.JComboBox assignedUserComboBox1;
    private javax.swing.JScrollPane assignsPane;
    private javax.swing.JTable assignsTable;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JPanel bottomPanel1;
    private javax.swing.JPanel bottomPanel2;
    private javax.swing.JPanel bottomPanel3;
    private javax.swing.JPanel bottomPanel4;
    private javax.swing.JComboBox categoryComboBox;
    private javax.swing.JComboBox categoryComboBox1;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JLabel categoryLabel1;
    private javax.swing.JPanel centerPanel;
    private javax.swing.JPanel centerpanelAssets;
    private javax.swing.JPanel centerpanelAssets1;
    private javax.swing.JPanel centerpanelAssets2;
    private javax.swing.JPanel centerpanelAssets3;
    private javax.swing.JPanel centerpanelAssets4;
    private javax.swing.JPanel centerpanelAssets5;
    private javax.swing.JPanel centerpanelAssets6;
    private javax.swing.JPanel centerpanelInvoices;
    private javax.swing.JPanel centerpanelUsers;
    private javax.swing.JPanel centerpanelassigns;
    private javax.swing.JPanel centerpanelassigns1;
    private javax.swing.JLabel companyLabel;
    private javax.swing.JLabel companyLabel1;
    private javax.swing.JTextField companyTextField;
    private javax.swing.JTextField companyTextField1;
    private javax.swing.JButton copyAssetButton;
    private javax.swing.JLabel costOfAssets;
    private javax.swing.JButton createUserButton;
    private javax.swing.JButton deleteAssetButton;
    private javax.swing.JButton deleteInvoiceButton;
    private javax.swing.JButton deleteUser;
    private javax.swing.JButton deleteUserButton;
    private javax.swing.JButton deleteassignButton;
    private javax.swing.JLabel disposalDateLabel;
    private javax.swing.JLabel disposalDateLabel1;
    private javax.swing.JFormattedTextField disposalDateTextField;
    private javax.swing.JFormattedTextField disposalDateTextField1;
    private javax.swing.JButton editUser;
    private javax.swing.JButton editUserButton1;
    private javax.swing.JPanel editUserPanel;
    private javax.swing.JLabel emailAddressLabel;
    private javax.swing.JLabel emailAddressLabel1;
    private javax.swing.JTextField emailAddressTextField;
    private javax.swing.JTextField emailAddressTextField1;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JLabel firstNameLabel1;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JTextField firstNameTextField1;
    private javax.swing.JTextField idNumberTextField;
    private javax.swing.JTextField idNumberTextField1;
    private javax.swing.JLabel invoiceNumber;
    private javax.swing.JLabel invoiceNumber1;
    private javax.swing.JComboBox invoiceNumberComboBox;
    private javax.swing.JComboBox invoiceNumberComboBox1;
    private javax.swing.JTextField invoiceNumberTextField;
    private javax.swing.JTextField invoiceNumberTextField1;
    private javax.swing.JScrollPane invoicePane;
    private javax.swing.JTable invoiceTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jobTitleLabel;
    private javax.swing.JLabel jobTitleLabel1;
    private javax.swing.JTextField jobTitleTextField;
    private javax.swing.JTextField jobTitleTextField1;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelPassword1;
    private javax.swing.JLabel labelType;
    private javax.swing.JLabel labelType1;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JLabel labelUsername1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel lastNameLabel1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JComboBox locationComboBox;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JLabel locationLabel1;
    private javax.swing.JTextField locationTextField;
    private javax.swing.JTextField locationTextField1;
    private javax.swing.JLabel manufacturerLabel;
    private javax.swing.JLabel manufacturerLabel1;
    private javax.swing.JTextField manufacturerTextField;
    private javax.swing.JTextField manufacturerTextField1;
    private javax.swing.JLabel mobileNumberLabel;
    private javax.swing.JLabel mobileNumberLabel1;
    private javax.swing.JTextField mobileNumberTextField;
    private javax.swing.JTextField mobileNumberTextField1;
    private javax.swing.JLabel modelLabel;
    private javax.swing.JLabel modelLabel1;
    private javax.swing.JTextField modelTextField;
    private javax.swing.JTextField modelTextField1;
    private javax.swing.JLabel notesLabel;
    private javax.swing.JLabel notesLabel1;
    private javax.swing.JTextArea notesTextField;
    private javax.swing.JTextArea notesTextField1;
    private javax.swing.JLabel numberOfAssets;
    private javax.swing.JLabel numberOfAssignees;
    private javax.swing.JLabel numberOfInvoices;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JPasswordField passwordField1;
    private javax.swing.JLabel purchaseDateLabel;
    private javax.swing.JLabel purchaseDateLabel1;
    private javax.swing.JFormattedTextField purchaseDateTextField;
    private javax.swing.JFormattedTextField purchaseDateTextField1;
    private javax.swing.JButton purchasedInLastYear;
    private javax.swing.JPanel report1;
    private javax.swing.JPanel reportsPanel;
    private javax.swing.JPanel reportsRunPanel;
    private javax.swing.JScrollPane resultsPane;
    private javax.swing.JTable resultsTable;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton searchAssets;
    private javax.swing.JButton searchAssigns;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextField searchField1;
    private javax.swing.JTextField searchField2;
    private javax.swing.JTextField searchField3;
    private javax.swing.JButton searchInvoices;
    private javax.swing.JButton searchUsers;
    private javax.swing.JLabel serialNumberLabel;
    private javax.swing.JLabel serialNumberLabel1;
    private javax.swing.JTextField serialNumberTextField;
    private javax.swing.JTextField serialNumberTextField1;
    private javax.swing.JComboBox statusComboBox;
    private javax.swing.JComboBox statusComboBox1;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel statusLabel1;
    private javax.swing.JLabel telephoneNumberLabel;
    private javax.swing.JLabel telephoneNumberLabel1;
    private javax.swing.JTextField telephoneNumberTextField;
    private javax.swing.JTextField telephoneNumberTextField1;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel titleLabel1;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JTextField titleTextField1;
    private javax.swing.JPanel topPanel;
    private javax.swing.JPanel topPanelAssets;
    private javax.swing.JPanel topPanelAssets1;
    private javax.swing.JPanel topPanelAssets3;
    private javax.swing.JPanel topPanelInvoices;
    private javax.swing.JPanel topPanelUsers;
    private javax.swing.JPanel topPanelUsers2;
    private javax.swing.JPanel topPanelUsers3;
    private javax.swing.JPanel topPanelUsers4;
    private javax.swing.JPanel topPanelUsers5;
    private javax.swing.JPanel topPanelassigns;
    private javax.swing.JPanel topPanelassigns1;
    private javax.swing.JLabel totalOfInvoices;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JLabel typeLabel1;
    private javax.swing.JTextField typeTextField;
    private javax.swing.JTextField typeTextField1;
    private javax.swing.JLabel unitCostLabel;
    private javax.swing.JLabel unitCostLabel1;
    private javax.swing.JTextField unitCostTextField;
    private javax.swing.JTextField unitCostTextField1;
    private javax.swing.JButton updateAssetButton;
    private javax.swing.JButton updateInvoiceButton1;
    private javax.swing.JButton updateUserButton1;
    private javax.swing.JComboBox userTypeComboBox;
    private javax.swing.JComboBox userTypeComboBox1;
    private javax.swing.JTextField usernameTextField;
    private javax.swing.JTextField usernameTextField1;
    private javax.swing.JScrollPane usersPane;
    private javax.swing.JScrollPane usersPane1;
    private javax.swing.JTable usersTable;
    private javax.swing.JTable usersTable1;
    private javax.swing.JButton usersWithNoAssets;
    private javax.swing.JButton viewAssetButton;
    private javax.swing.JButton viewAssetsButton;
    private javax.swing.JButton viewAssetsForButton;
    private javax.swing.JPanel viewAssetsPanel;
    private javax.swing.JButton viewAssignsButton;
    private javax.swing.JPanel viewAssignsPanel;
    private javax.swing.JButton viewButton;
    private javax.swing.JButton viewInvoiceButton;
    private javax.swing.JButton viewInvoicesButton;
    private javax.swing.JPanel viewInvoicesPanel;
    private javax.swing.JPanel viewReports;
    private javax.swing.JPanel viewSelectedAssetsPanel;
    private javax.swing.JPanel viewSelectedInvoicesPanel;
    private javax.swing.JPanel viewSelectedUsersPanel;
    private javax.swing.JButton viewSettingsButton;
    private javax.swing.JPanel viewSettingsPanel;
    private javax.swing.JButton viewUserButton;
    private javax.swing.JPanel viewUserPanel;
    private javax.swing.JButton viewUsersButton;
    private javax.swing.JPanel viewUsersPanel;
    // End of variables declaration//GEN-END:variables

}

